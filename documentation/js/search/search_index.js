var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/AddCurrentUser.html",[0,0.039,1,1.595]],["body/classes/AddCurrentUser.html",[0,0.066,1,2.673,2,0.319,3,0.284,4,0.25,5,1.905,6,1.751,7,1.296,8,0.393,9,0.817,10,1.77,11,4.394,12,1.959,13,0.807,14,0.867,15,3.442,16,2.189,17,1.157,18,4.662,19,0.867,20,0.027,21,0.701,22,0.867,23,3.442,24,0.808,25,0.867,26,3.102,27,0.663,28,0.808,29,1.905,30,2.377,31,2.29,32,2.29,33,0.489,34,1.139,35,1.905,36,2.154,37,1.174,38,3.195,39,1.064,40,2.494,41,2.29,42,2.29,43,1.542,44,2.29,45,2.08,46,2.08,47,0.018,48,0.018]],["title/classes/AddDashboard.html",[0,0.039,49,0.977]],["body/classes/AddDashboard.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.608,50,0.776,51,2.537,52,1.027,53,2.081,54,3.541,55,2.345,56,1.619,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.549,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.344,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776]],["title/classes/AddDashboards.html",[0,0.039,49,0.977]],["body/classes/AddDashboards.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.608,50,0.776,51,2.537,52,1.027,53,2.081,56,1.619,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.549,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.344,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,78,3.541,79,2.345]],["title/components/AppComponent.html",[80,1.595,81,1.872]],["body/components/AppComponent.html",[0,0.044,2,0.347,3,0.309,4,0.272,13,0.469,14,0.941,16,1.237,17,0.818,19,0.941,20,0.027,21,1.122,22,0.941,27,0.735,28,0.878,33,0.309,36,2.007,37,0.941,38,2.259,47,0.019,48,0.019,59,0.818,80,2.872,81,3.242,82,3.157,83,3.157,84,3.157,85,3.157,86,3.157,87,3.54,88,3.898,89,3.278,90,4.16,91,4.927,92,4.16,93,4.927,94,3.738,95,4.639,96,3.738,97,1.419,98,1.763,99,3.738,100,2.774,101,2.259,102,2.774,103,3.738,104,4.927,105,2.259,106,4.16,107,4.16,108,4.16,109,4.947,110,3.157,111,3.157,112,1.763,113,3.157]],["title/injectables/AppEffects.html",[114,1.378,115,2.251]],["body/injectables/AppEffects.html",[0,0.054,2,0.432,3,0.385,4,0.339,7,1.448,13,0.585,14,1.174,17,1.02,19,1.174,20,0.026,21,0.949,22,1.174,27,0.711,33,0.385,47,0.022,48,0.022,97,1.77,101,2.817,114,2.487,115,3.77,116,3.936,117,3.459,118,4.662,119,3.102,120,2.58]],["title/modules/AppModule.html",[121,1.284,122,2.251]],["body/modules/AppModule.html",[0,0.034,2,0.274,3,0.244,4,0.215,20,0.027,27,0.826,28,0.986,33,0.347,47,0.016,48,0.016,81,3.569,88,1.968,95,3.619,97,1.123,105,1.787,115,1.968,119,1.968,120,1.637,121,2.211,122,4.249,123,1.787,124,3.619,125,3.246,126,3.114,127,2.497,128,2.497,129,2.497,130,2.497,131,3.519,132,3.114,133,2.194,134,1.968,135,2.957,136,4.197,137,2.497,138,2.194,139,2.793,140,2.497,141,2.957,142,2.957,143,2.497,144,3.544,145,2.497,146,2.7,147,2.793,148,2.957,149,2.957,150,2.497,151,2.957,152,1.968,153,2.497,154,4.197,155,2.957,156,2.793,157,2.957,158,1.637,159,4.878,160,2.957,161,2.957,162,2.957,163,2.957,164,3.114,165,4.878,166,2.957,167,2.957,168,2.957,169,2.497,170,2.957,171,2.957,172,2.957,173,2.957]],["title/modules/AppRoutingModule.html",[121,1.284,131,2.044]],["body/modules/AppRoutingModule.html",[0,0.053,2,0.426,3,0.38,4,0.334,20,0.027,27,0.761,33,0.464,47,0.022,48,0.022,59,1.006,97,1.745,121,1.745,131,3.395,139,3.738,158,3.358,174,4.596,175,3.881,176,4.744,177,3.41,178,2.777,179,3.881,180,4.596,181,4.596,182,4.596,183,4.596,184,3.41]],["title/classes/ClearDashboards.html",[0,0.039,68,1.045]],["body/classes/ClearDashboards.html",[0,0.072,2,0.229,3,0.204,4,0.179,6,1.899,7,1.362,8,0.281,9,0.644,12,2.058,13,0.796,17,0.539,20,0.027,24,0.579,25,0.621,27,0.551,28,0.579,33,0.514,34,0.815,37,0.621,39,1.136,43,1.968,47,0.014,48,0.014,49,1.578,50,0.815,51,2.423,56,1.395,57,1.846,58,0.815,59,1.493,60,0.936,61,0.815,62,1.358,63,1.578,64,1.395,65,1.578,66,1.578,67,1.395,68,1.506,69,0.936,70,0.936,71,1.395,72,1.395,73,1.395,74,1.302,75,1.216,76,1.395,77,0.815,185,2.465]],["title/interfaces/Dashboard.html",[59,0.74,186,1.045]],["body/interfaces/Dashboard.html",[2,0.459,3,0.408,4,0.36,8,0.564,9,1.029,13,0.62,20,0.025,33,0.408,47,0.022,48,0.022,59,1.285,74,2.295,75,2.071,186,1.814,187,4.175]],["title/components/DashboardComponent.html",[80,1.595,112,1.595]],["body/components/DashboardComponent.html",[0,0.045,2,0.357,3,0.318,4,0.28,6,1.552,8,0.439,14,1.407,17,1.099,20,0.026,21,1.022,27,0.483,33,0.318,47,0.019,48,0.019,59,1.345,80,2.899,81,2.13,82,3.25,83,3.25,84,3.25,86,3.25,87,3.58,88,3.942,90,4.241,92,4.241,97,1.461,105,2.326,106,4.241,107,4.241,108,4.241,109,5.003,110,3.25,111,3.25,112,2.795,113,3.25,188,3.25,189,5.59,190,5.022,191,5.022,192,4.241,193,5.925,194,3.849,195,3.849,196,2.326,197,3.849,198,5.022]],["title/injectables/DashboardEffects.html",[114,1.378,199,2.251]],["body/injectables/DashboardEffects.html",[0,0.05,2,0.397,3,0.353,4,0.311,7,1.418,8,0.488,9,0.942,13,0.537,14,1.077,17,1.176,19,1.077,20,0.026,21,0.871,22,1.077,24,1.005,25,1.077,27,0.737,33,0.353,47,0.021,48,0.021,61,1.415,77,1.415,97,1.624,101,2.586,114,2.393,117,3.175,119,4.376,120,2.368,199,3.576,200,3.613,201,5.374,202,5.374,203,3.613,204,3.613]],["title/modules/DashboardModule.html",[121,1.284,205,2.251]],["body/modules/DashboardModule.html",[0,0.045,2,0.36,3,0.321,4,0.283,20,0.027,27,0.834,28,0.912,33,0.417,47,0.019,48,0.019,59,0.85,97,1.474,105,2.347,112,2.804,120,2.149,121,1.918,123,2.347,124,4.165,125,2.584,126,2.881,132,3.748,133,2.881,134,2.584,139,3.361,140,3.279,145,3.279,150,3.279,199,2.584,205,4.34,206,3.279,207,3.279,208,3.279,209,3.818,210,3.883,211,5.051,212,3.279,213,3.748,214,3.883,215,3.883,216,3.883,217,3.883,218,3.883,219,3.883,220,3.883]],["title/modules/DashboardRoutingModule.html",[121,1.284,209,2.044]],["body/modules/DashboardRoutingModule.html",[0,0.053,2,0.422,3,0.376,4,0.331,20,0.027,27,0.79,33,0.461,47,0.021,48,0.021,80,2.145,97,1.727,112,2.633,121,1.727,139,3.714,158,3.342,175,3.84,176,4.713,177,3.374,178,2.748,179,3.84,209,3.373,221,4.548,222,4.548,223,4.548]],["title/interfaces/DashboardState.html",[186,1.045,224,2.251]],["body/interfaces/DashboardState.html",[2,0.305,3,0.271,4,0.239,7,0.719,9,0.792,20,0.027,24,0.772,27,0.647,33,0.481,47,0.017,48,0.017,56,1.715,58,1.087,59,0.719,60,1.247,61,1.087,70,1.247,71,1.715,72,1.715,73,1.715,76,1.247,77,1.494,98,3.12,146,1.818,178,3.119,186,1.396,196,3.936,204,2.775,224,3.698,225,2.186,226,3.814,227,4.359,228,3.351,229,3.351,230,3.351,231,3.351,232,2.186,233,3.006,234,2.438,235,1.986,236,2.775,237,2.775,238,5.447,239,3.286,240,3.286,241,3.286,242,3.286,243,3.286,244,3.286,245,3.286,246,3.286,247,3.286,248,3.286,249,2.775,250,2.775,251,2.775,252,2.775,253,2.438]],["title/classes/DeleteDashboard.html",[0,0.039,66,0.977]],["body/classes/DeleteDashboard.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.549,66,1.608,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.344,73,1.619,74,1.254,75,1.171,76,0.89,77,0.776,254,3.541,255,2.345]],["title/classes/DeleteDashboards.html",[0,0.039,66,0.977]],["body/classes/DeleteDashboards.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.549,66,1.608,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.344,73,1.619,74,1.254,75,1.171,76,0.89,77,0.776,256,3.541,257,2.345]],["title/interfaces/ErrorMessage.html",[30,1.724,186,1.045]],["body/interfaces/ErrorMessage.html",[2,0.428,3,0.381,4,0.336,8,0.526,9,0.987,13,0.762,20,0.026,30,2.87,33,0.381,47,0.022,48,0.022,75,2.184,186,1.74,258,3.895,259,3.895,260,6.328,261,6.328,262,6.328,263,6.077]],["title/classes/LoadCurrentUser.html",[0,0.039,36,1.378]],["body/classes/LoadCurrentUser.html",[0,0.068,1,2.574,2,0.34,3,0.303,4,0.267,5,2.028,6,1.796,7,1.324,8,0.418,9,0.852,11,2.719,12,2.001,13,0.795,16,2.131,17,0.802,20,0.027,24,0.861,25,0.923,26,2.439,27,0.684,28,0.861,29,2.028,30,2.479,31,2.439,32,2.439,33,0.5,34,1.212,35,2.028,36,2.368,37,1.224,38,3.298,39,1.133,40,2.574,41,2.439,42,3.236,43,1.609,44,2.439,45,2.215,46,2.215,47,0.019,48,0.019,264,3.665]],["title/classes/LoadCurrentUserFail.html",[0,0.039,40,1.595]],["body/classes/LoadCurrentUserFail.html",[0,0.066,1,2.494,2,0.319,3,0.284,4,0.25,5,1.905,6,1.751,7,1.296,8,0.393,9,0.817,10,1.77,11,2.554,12,1.959,13,0.807,14,0.867,16,2.101,17,1.157,19,0.867,20,0.027,21,0.701,22,0.867,24,0.808,25,0.867,26,2.29,27,0.663,28,0.808,29,1.905,30,3.113,31,2.29,32,2.29,33,0.489,34,1.139,35,1.905,36,2.154,37,1.174,38,3.195,39,1.064,40,2.673,41,2.29,42,2.29,43,1.542,44,3.102,45,3.579,46,2.08,47,0.018,48,0.018,265,3.442,266,4.662,267,3.442]],["title/classes/LoadDashboards.html",[0,0.039,62,1.045]],["body/classes/LoadDashboards.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.469,63,1.549,64,1.344,65,1.549,66,1.549,67,1.344,68,1.318,69,0.89,70,1.344,71,1.344,72,1.344,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,268,3.541,269,2.345]],["title/interfaces/State.html",[98,1.595,186,1.045]],["body/interfaces/State.html",[2,0.354,3,0.315,4,0.278,8,0.435,9,0.875,13,0.478,16,2.119,20,0.027,27,0.698,28,0.896,33,0.488,47,0.019,48,0.019,87,2.305,89,3.704,98,3.203,146,2.111,147,3.704,152,2.539,153,3.222,164,2.831,178,3.363,186,1.825,196,2.305,270,2.831,271,3.815,272,3.568,273,3.815,274,4.216,275,3.815,276,3.815,277,3.017,278,3.815,279,3.222,280,2.831]],["title/classes/UpdateDashboard.html",[0,0.039,65,0.977]],["body/classes/UpdateDashboard.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.608,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.619,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,281,3.541,282,2.345]],["title/classes/UpdateDashboards.html",[0,0.039,65,0.977]],["body/classes/UpdateDashboards.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.549,64,1.344,65,1.608,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.344,72,1.619,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,283,3.541,284,2.345]],["title/classes/UpsertDashboard.html",[0,0.039,63,0.977]],["body/classes/UpsertDashboard.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.608,64,1.344,65,1.549,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.619,72,1.344,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,285,3.541,286,2.345]],["title/classes/UpsertDashboards.html",[0,0.039,63,0.977]],["body/classes/UpsertDashboards.html",[0,0.071,2,0.217,3,0.194,4,0.171,6,1.877,7,1.347,8,0.268,9,0.62,10,1.344,12,2.037,13,0.82,14,0.59,17,0.933,19,0.59,20,0.027,21,0.477,22,0.59,24,0.551,25,0.59,27,0.535,28,0.551,33,0.508,34,0.776,37,0.59,39,1.094,43,1.941,47,0.014,48,0.014,49,1.549,50,0.776,51,2.537,52,1.027,53,2.081,56,1.344,57,1.807,58,0.776,59,1.487,60,0.89,61,0.776,62,1.318,63,1.608,64,1.344,65,1.549,66,1.549,67,1.344,68,1.318,69,0.89,70,0.89,71,1.619,72,1.344,73,1.344,74,1.254,75,1.171,76,0.89,77,0.776,287,3.541,288,2.345]],["title/interfaces/User.html",[16,1.119,186,1.045]],["body/interfaces/User.html",[2,0.284,3,0.253,4,0.223,8,0.349,9,0.754,13,0.787,16,2.238,20,0.027,21,1.257,33,0.253,47,0.016,48,0.016,57,1.524,74,2.086,75,2.222,102,4,186,1.329,289,2.585,290,5.889,291,5.391,292,5.391,293,5.889,294,5.391,295,5.391,296,5.391,297,5.391,298,5.391,299,4.553,300,5.391,301,4.301,302,4.301,303,4.301,304,5.391,305,4.301,306,4.301,307,4.301,308,4.301,309,4.301,310,4.301]],["title/injectables/UserEffects.html",[114,1.378,156,2.251]],["body/injectables/UserEffects.html",[0,0.041,1,1.681,2,0.331,3,0.294,4,0.259,7,1.35,8,0.407,9,0.836,13,0.599,14,0.897,16,1.78,17,1.045,19,0.897,20,0.027,21,0.726,22,0.897,24,0.837,25,0.897,27,0.79,29,1.973,33,0.294,35,1.973,36,2.342,40,1.681,47,0.018,48,0.018,97,1.353,100,2.645,101,2.154,114,2.192,117,2.645,119,3.581,120,1.973,156,3.176,203,3.01,311,3.01,312,4.192,313,3.565,314,4.854,315,4.773,316,5.382,317,4.773,318,4.773,319,3.542,320,4.773,321,4.773,322,4.773,323,4.773,324,3.565,325,3.565,326,3.01,327,3.565,328,3.565,329,3.565,330,3.565,331,3.565]],["title/injectables/UserService.html",[114,1.378,312,2.251]],["body/injectables/UserService.html",[0,0.049,2,0.388,3,0.345,4,0.304,8,0.477,13,0.524,14,1.053,16,1.384,17,1.159,19,1.053,20,0.027,21,0.852,22,1.053,27,0.766,29,2.315,33,0.345,36,2.49,47,0.02,48,0.02,89,2.783,97,1.588,101,2.528,114,2.158,192,4.474,196,3.201,312,3.525,314,4.91,326,3.532,332,3.532,333,4.183,334,6.113,335,4.183,336,5.298,337,4.183,338,3.532,339,3.532,340,3.532,341,3.532,342,4.183,343,4.183,344,4.183,345,4.183]],["title/interfaces/UserState.html",[186,1.045,272,2.044]],["body/interfaces/UserState.html",[2,0.238,3,0.212,4,0.187,7,0.562,8,0.293,9,0.871,13,0.623,16,2.023,20,0.027,24,0.603,26,1.708,27,0.623,29,1.421,30,2.534,31,1.708,32,1.708,33,0.496,35,1.421,37,1.686,42,1.708,44,1.708,45,3.747,46,2.289,47,0.015,48,0.015,58,0.849,87,2.289,98,2.99,100,1.905,102,3.687,178,3.467,184,3.34,186,1.171,196,3.203,226,3.199,227,3.801,228,2.81,229,2.81,230,3.34,231,2.81,232,1.708,233,2.52,234,1.905,235,1.551,236,2.168,237,2.168,238,3.801,249,2.168,250,2.168,251,2.168,252,2.168,253,1.905,272,3.633,277,1.551,279,2.168,346,1.708,347,4.844,348,6.114,349,5.547,350,4.844,351,3.199,352,2.567,353,2.567,354,1.905,355,3.199,356,1.905,357,1.905,358,2.168,359,1.905,360,2.168]],["title/coverage.html",[361,3.89]],["body/coverage.html",[0,0.073,1,1.185,4,0.183,5,2.46,13,0.315,16,0.831,20,0.027,30,1.281,36,1.023,40,1.185,47,0.014,48,0.014,49,1.076,50,2.012,59,0.55,62,0.776,63,1.076,65,1.076,66,1.076,68,0.776,80,1.759,81,1.39,85,2.122,98,1.185,112,1.185,114,2.003,115,1.672,116,2.122,146,2.063,147,1.672,152,2.481,156,1.672,186,1.701,187,2.122,188,2.122,199,1.672,200,2.122,213,1.864,224,1.672,225,3.496,232,2.481,233,2.481,235,2.253,258,2.122,259,2.122,270,3.649,272,1.518,277,1.518,280,1.864,289,2.122,311,2.122,312,1.672,319,1.864,332,2.122,346,3.978,354,1.864,356,1.864,357,1.864,359,1.864,361,2.122,362,2.512,363,2.512,364,2.512,365,6.9,366,6.247,367,5.253,368,4.918,369,2.122,370,4.854,371,6.575,372,2.512,373,2.512,374,4.445,375,2.512,376,3.728,377,2.512,378,2.512,379,2.122,380,2.122,381,3.148,382,2.122,383,2.122,384,2.512,385,2.512]],["title/dependencies.html",[123,2.457,386,2.829]],["body/dependencies.html",[20,0.027,28,0.989,47,0.02,48,0.02,58,1.393,97,1.598,120,2.33,123,2.544,125,2.801,137,4.492,138,3.947,143,3.555,144,3.555,177,3.123,212,3.555,338,3.555,339,3.555,340,3.555,341,3.555,387,4.21,388,6.741,389,4.21,390,4.21,391,4.21,392,4.21,393,4.21,394,4.21,395,5.832,396,4.21,397,4.21,398,4.21,399,4.21,400,4.21,401,4.21,402,4.21,403,4.21,404,4.21,405,4.21,406,4.21]],["title/miscellaneous/enumerations.html",[407,1.334,408,3.433]],["body/miscellaneous/enumerations.html",[1,1.918,5,2.25,8,0.464,16,2.116,20,0.02,25,1.716,35,2.879,36,1.656,37,1.445,38,3.467,39,1.773,40,1.918,41,2.705,47,0.02,48,0.02,49,1.502,50,1.345,57,1.843,59,1.522,61,1.721,62,1.256,63,1.502,64,1.975,65,1.502,66,1.502,67,1.975,68,1.256,69,1.543,407,1.918,408,3.433,409,3.433,410,3.433]],["title/miscellaneous/functions.html",[235,2.457,407,1.334]],["body/miscellaneous/functions.html",[7,1.403,8,0.548,19,1.452,20,0.026,21,1.174,22,1.452,47,0.022,48,0.022,98,2.72,146,3.191,225,3.193,235,2.9,277,3.485,346,3.193,407,2.264,411,4.052,412,4.052,413,4.799,414,5.767,415,4.799]],["title/index.html",[8,0.323,416,2.829,417,2.829]],["body/index.html",[3,0.324,4,0.285,20,0.019,21,0.798,47,0.019,48,0.019,80,2.66,88,2.607,95,2.907,134,2.607,169,3.309,299,4.29,319,2.907,418,3.918,419,5.081,420,5.966,421,5.638,422,5.638,423,3.918,424,3.918,425,5.081,426,6.447,427,6.447,428,3.918,429,3.918,430,3.918,431,3.918,432,3.918,433,3.918,434,3.918,435,3.918,436,3.918,437,5.638,438,3.918,439,6.181,440,3.918,441,3.918,442,3.918,443,3.918,444,3.918,445,3.309,446,6.181,447,5.081,448,5.081,449,3.918,450,5.966,451,3.918,452,3.918,453,3.918,454,5.638,455,3.918,456,3.918,457,3.918,458,3.918]],["title/modules.html",[121,1.749]],["body/modules.html",[20,0.023,47,0.023,48,0.023,121,1.906,122,3.341,131,3.034,138,4.395,205,3.341,209,3.034,459,5.924,460,5.924,461,6.51,462,5.924,463,5.924]],["title/overview.html",[464,3.89]],["body/overview.html",[0,0.049,20,0.026,33,0.345,47,0.02,48,0.02,80,1.973,81,3.621,105,2.528,112,2.743,114,1.704,121,2.011,122,4.447,123,2.528,124,3.103,125,2.783,126,3.103,127,3.532,128,3.532,129,3.532,130,3.532,131,3.514,132,3.931,133,3.103,134,2.783,158,2.315,186,1.293,205,4.287,206,3.532,207,3.532,208,3.532,209,3.514,464,3.532,465,5.298,466,4.183,467,4.183,468,4.183,469,4.183]],["title/routes.html",[158,2.55]],["body/routes.html",[20,0.024,47,0.024,48,0.024,158,2.986]],["title/miscellaneous/typealiases.html",[407,1.334,470,4.065]],["body/miscellaneous/typealiases.html",[1,2.207,5,2.589,8,0.534,13,0.587,20,0.027,36,1.906,40,2.207,46,3.695,47,0.022,48,0.022,49,1.64,50,1.548,62,1.446,63,1.64,65,1.64,66,1.64,68,1.446,77,2.023,407,2.207,409,3.951,410,3.951,471,4.678]],["title/miscellaneous/variables.html",[370,3.016,407,1.334]],["body/miscellaneous/variables.html",[8,0.31,9,0.692,13,0.777,16,1.306,20,0.027,24,1.546,25,1.657,37,1.171,45,1.642,47,0.015,48,0.015,87,2.386,89,1.808,98,2.961,112,1.282,146,2.574,147,3.609,152,3.766,164,2.016,184,2.93,213,3.451,224,2.627,225,1.808,228,3.788,229,2.93,230,2.93,231,2.93,232,3.766,233,3.766,234,2.93,253,2.93,270,2.016,272,3.42,274,3.334,277,1.642,280,3.451,346,1.808,347,2.294,350,4.312,351,2.294,354,3.451,355,3.334,356,3.451,357,3.451,358,2.294,359,3.451,360,2.294,369,2.294,370,2.016,379,2.294,380,2.294,381,2.294,382,3.928,383,3.928,407,1.282,411,3.928,412,4.931,445,3.334,472,5.106,473,3.949,474,2.717,475,2.717,476,2.717,477,2.717,478,5.106]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0.6.8",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["1.0.2",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":467,"title":{},"body":{"overview.html":{}}}],["2",{"_index":466,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":469,"title":{},"body":{"overview.html":{}}}],["4",{"_index":465,"title":{},"body":{"overview.html":{}}}],["4.1.1",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":468,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":424,"title":{},"body":{"index.html":{}}}],["80",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["action",{"_index":7,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"injectables/AppEffects.html":{},"classes/ClearDashboards.html":{},"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/functions.html":{}}}],["action.error",{"_index":353,"title":{},"body":{"interfaces/UserState.html":{}}}],["action.typ",{"_index":237,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["actionreduc",{"_index":273,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":274,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions/dashboard.act",{"_index":204,"title":{},"body":{"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{}}}],["actions/user.act",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{}}}],["actual_compon",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["adapt",{"_index":232,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.addall(action.payload.dashboard",{"_index":247,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.addmany(action.payload.dashboard",{"_index":241,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.addone(action.currentus",{"_index":352,"title":{},"body":{"interfaces/UserState.html":{}}}],["adapter.addone(action.payload.dashboard",{"_index":239,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.getinitialst",{"_index":234,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["adapter.getselector",{"_index":253,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["adapter.removeall(st",{"_index":248,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.removemany(action.payload.id",{"_index":246,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.removeone(action.payload.id",{"_index":245,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.updatemany(action.payload.dashboard",{"_index":244,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.updateone(action.payload.dashboard",{"_index":243,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.upsertmany(action.payload.dashboard",{"_index":242,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["adapter.upsertone(action.payload.dashboard",{"_index":240,"title":{},"body":{"interfaces/DashboardState.html":{}}}],["add",{"_index":39,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/enumerations.html":{}}}],["addcurrentus",{"_index":1,"title":{"classes/AddCurrentUser.html":{}},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addcurrentuser(us",{"_index":320,"title":{},"body":{"injectables/UserEffects.html":{}}}],["adddashboard",{"_index":49,"title":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addit",{"_index":230,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":306,"title":{},"body":{"interfaces/User.html":{}}}],["alias",{"_index":471,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":421,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":212,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["app",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"index.html":{}}}],["app.compon",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["app.effect",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appeffect",{"_index":115,"title":{"injectables/AppEffects.html":{}},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodul",{"_index":122,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":131,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":440,"title":{},"body":{"index.html":{}}}],["assign",{"_index":300,"title":{},"body":{"interfaces/User.html":{}}}],["automat",{"_index":432,"title":{},"body":{"index.html":{}}}],["avail",{"_index":463,"title":{},"body":{"modules.html":{}}}],["boolean",{"_index":348,"title":{},"body":{"interfaces/UserState.html":{}}}],["bootstrap",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":461,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":439,"title":{},"body":{"index.html":{}}}],["button",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["case",{"_index":238,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["catcherror",{"_index":327,"title":{},"body":{"injectables/UserEffects.html":{}}}],["catcherror((error",{"_index":321,"title":{},"body":{"injectables/UserEffects.html":{}}}],["chang",{"_index":434,"title":{},"body":{"index.html":{}}}],["check",{"_index":457,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":69,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/enumerations.html":{}}}],["cleardashboard",{"_index":68,"title":{"classes/ClearDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cli",{"_index":422,"title":{},"body":{"index.html":{}}}],["client",{"_index":341,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cluster_appmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":206,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":207,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":208,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["code",{"_index":435,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":211,"title":{},"body":{"modules/DashboardModule.html":{}}}],["compon",{"_index":80,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["const",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"interfaces/UserState.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(act",{"_index":117,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{}}}],["constructor(currentus",{"_index":15,"title":{},"body":{"classes/AddCurrentUser.html":{}}}],["constructor(error",{"_index":265,"title":{},"body":{"classes/LoadCurrentUserFail.html":{}}}],["constructor(httpcli",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(payload",{"_index":52,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["constructor(priv",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":43,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["constructor(stor",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["contain",{"_index":213,"title":{},"body":{"modules/DashboardModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containers/dashboard/dashboard.compon",{"_index":222,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["containers/index",{"_index":214,"title":{},"body":{"modules/DashboardModule.html":{}}}],["context",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":361,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":290,"title":{},"body":{"interfaces/User.html":{}}}],["createentityadapt",{"_index":229,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector",{"_index":275,"title":{},"body":{"interfaces/State.html":{}}}],["createselector",{"_index":276,"title":{},"body":{"interfaces/State.html":{}}}],["credenti",{"_index":310,"title":{},"body":{"interfaces/User.html":{}}}],["current",{"_index":38,"title":{},"body":{"classes/AddCurrentUser.html":{},"components/AppComponent.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"miscellaneous/enumerations.html":{}}}],["currentus",{"_index":11,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{}}}],["dashboard",{"_index":59,"title":{"interfaces/Dashboard.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dashboard.component.html",{"_index":191,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":190,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.module#dashboardmodul",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboardact",{"_index":77,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardactiontyp",{"_index":61,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/enumerations.html":{}}}],["dashboardactiontypes.adddashboard",{"_index":56,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardactiontypes.cleardashboard",{"_index":76,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardactiontypes.deletedashboard",{"_index":73,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardactiontypes.loaddashboard",{"_index":70,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardactiontypes.updatedashboard",{"_index":72,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardactiontypes.upsertdashboard",{"_index":71,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["dashboardcompon",{"_index":112,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dashboardeffect",{"_index":199,"title":{"injectables/DashboardEffects.html":{}},"body":{"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["dashboardmodul",{"_index":205,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodul",{"_index":209,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardst",{"_index":224,"title":{"interfaces/DashboardState.html":{}},"body":{"interfaces/DashboardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":308,"title":{},"body":{"interfaces/User.html":{}}}],["datavieworganisationunit",{"_index":291,"title":{},"body":{"interfaces/User.html":{}}}],["datavieworganisationunits[id,name,level],organisationunits[id,name,level],usercredentials[usernam",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":297,"title":{},"body":{"interfaces/User.html":{}}}],["debug",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["declar",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["decor",{"_index":203,"title":{},"body":{"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{}}}],["default",{"_index":24,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":17,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"classes/ClearDashboards.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["delet",{"_index":67,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/enumerations.html":{}}}],["deletedashboard",{"_index":66,"title":{"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["depend",{"_index":123,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":271,"title":{},"body":{"interfaces/State.html":{}}}],["dev",{"_index":429,"title":{},"body":{"index.html":{}}}],["develop",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtool",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["dhis2",{"_index":339,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["direct",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":438,"title":{},"body":{"index.html":{}}}],["directori",{"_index":442,"title":{},"body":{"index.html":{}}}],["display",{"_index":305,"title":{},"body":{"interfaces/User.html":{}}}],["displaynam",{"_index":292,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":441,"title":{},"body":{"index.html":{}}}],["document",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["dynam",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":451,"title":{},"body":{"index.html":{}}}],["effect",{"_index":119,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{}}}],["effects/dashboard.effect",{"_index":217,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effects/user.effect",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["effectsmodule.forfeature([dashboardeffect",{"_index":220,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effectsmodule.forroot([appeffect",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["email",{"_index":293,"title":{},"body":{"interfaces/User.html":{}}}],["enabl",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":450,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":231,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["entityadapt",{"_index":228,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["entityst",{"_index":227,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["entri",{"_index":309,"title":{},"body":{"interfaces/User.html":{}}}],["enum",{"_index":34,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["enumer",{"_index":408,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["error",{"_index":45,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["errormessag",{"_index":30,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AddCurrentUser.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["execut",{"_index":447,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"overview.html":{}}}],["extend",{"_index":226,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["fail",{"_index":41,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"miscellaneous/enumerations.html":{}}}],["fals",{"_index":350,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":444,"title":{},"body":{"index.html":{}}}],["fromdashboard",{"_index":215,"title":{},"body":{"modules/DashboardModule.html":{}}}],["fromdashboard.reduc",{"_index":219,"title":{},"body":{"modules/DashboardModule.html":{}}}],["full",{"_index":304,"title":{},"body":{"interfaces/User.html":{}}}],["function",{"_index":235,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":453,"title":{},"body":{"index.html":{}}}],["gener",{"_index":420,"title":{},"body":{"index.html":{}}}],["get",{"_index":416,"title":{"index.html":{}},"body":{}}],["get(`me.json?fields=id,name,displayname,created,lastupdated,email",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["getrootst",{"_index":280,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusererrorst",{"_index":359,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuserhaserrorst",{"_index":357,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuserloadedst",{"_index":356,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuserloadingst",{"_index":354,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":456,"title":{},"body":{"index.html":{}}}],["graph",{"_index":462,"title":{},"body":{"modules.html":{}}}],["haserror",{"_index":347,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":454,"title":{},"body":{"index.html":{}}}],["html",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["http",{"_index":340,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["http://localhost:4200",{"_index":431,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":74,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{}}}],["idashboard",{"_index":418,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"components/DashboardComponent.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["inform",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}}}],["initialst",{"_index":233,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":114,"title":{"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectable({providedin",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["interfac",{"_index":186,"title":{"interfaces/Dashboard.html":{},"interfaces/DashboardState.html":{},"interfaces/ErrorMessage.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/Dashboard.html":{},"interfaces/DashboardState.html":{},"interfaces/ErrorMessage.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"coverage.html":{},"overview.html":{}}}],["js",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":449,"title":{},"body":{"index.html":{}}}],["last",{"_index":307,"title":{},"body":{"interfaces/User.html":{}}}],["lastupd",{"_index":294,"title":{},"body":{"interfaces/User.html":{}}}],["legend",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["liter",{"_index":53,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["load",{"_index":37,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcurrentus",{"_index":36,"title":{"classes/LoadCurrentUser.html":{}},"body":{"classes/AddCurrentUser.html":{},"components/AppComponent.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcurrentuserfail",{"_index":40,"title":{"classes/LoadCurrentUserFail.html":{}},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcurrentuserfail({error",{"_index":323,"title":{},"body":{"injectables/UserEffects.html":{}}}],["loaddashboard",{"_index":62,"title":{"classes/LoadDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lodash",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":328,"title":{},"body":{"injectables/UserEffects.html":{}}}],["match",{"_index":48,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messag",{"_index":260,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["message.model",{"_index":32,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{}}}],["message.model.t",{"_index":259,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["metadata",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["metareduc",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":192,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":407,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models/dashboard.model",{"_index":60,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["models/error",{"_index":31,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{}}}],["models/user.model",{"_index":29,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["modul",{"_index":121,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":455,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":430,"title":{},"body":{"index.html":{}}}],["new",{"_index":319,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":427,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["ngoninit",{"_index":193,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ngrx",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["ngrx/effect",{"_index":120,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":58,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":28,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClearDashboards.html":{},"modules/DashboardModule.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"dependencies.html":{}}}],["ngx",{"_index":338,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["ngxdhis2httpclientservic",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":351,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":263,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["object",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":314,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["of(new",{"_index":322,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftyp",{"_index":325,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oninit",{"_index":189,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oper",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["option",{"_index":22,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["organis",{"_index":298,"title":{},"body":{"interfaces/User.html":{}}}],["organisationunit",{"_index":295,"title":{},"body":{"interfaces/User.html":{}}}],["out",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":464,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":386,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":279,"title":{},"body":{"interfaces/State.html":{},"interfaces/UserState.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["payload",{"_index":51,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["pipe(map((us",{"_index":318,"title":{},"body":{"injectables/UserEffects.html":{}}}],["privat",{"_index":331,"title":{},"body":{"injectables/UserEffects.html":{}}}],["prod",{"_index":443,"title":{},"body":{"index.html":{}}}],["product",{"_index":445,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":419,"title":{},"body":{"index.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"injectables/DashboardEffects.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":452,"title":{},"body":{"index.html":{}}}],["provid",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["readm",{"_index":458,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}}}],["reduc",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducer(st",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducers/dashboard.reduc",{"_index":216,"title":{},"body":{"modules/DashboardModule.html":{}}}],["reducers/index",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["regist",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":433,"title":{},"body":{"index.html":{}}}],["report",{"_index":302,"title":{},"body":{"interfaces/User.html":{}}}],["requir",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["result",{"_index":47,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":196,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["root",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/State.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["rout",{"_index":158,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":223,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routing.module.t",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["run",{"_index":426,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["rxjs/index",{"_index":326,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["rxjs/internal/oper",{"_index":329,"title":{},"body":{"injectables/UserEffects.html":{}}}],["scaffold",{"_index":436,"title":{},"body":{"index.html":{}}}],["selectal",{"_index":251,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["selectent",{"_index":250,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["selectid",{"_index":249,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/State.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["selecttot",{"_index":252,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["serv",{"_index":428,"title":{},"body":{"index.html":{}}}],["server",{"_index":425,"title":{},"body":{"index.html":{}}}],["servic",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user.servic",{"_index":330,"title":{},"body":{"injectables/UserEffects.html":{}}}],["serviceworkermodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"components/DashboardComponent.html":{},"injectables/DashboardEffects.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["spec\\.t",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dashboard.actions.t",{"_index":409,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../dashboard.reducer.t",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.t",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.actions.t",{"_index":410,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.t",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/actions/user.actions.t",{"_index":5,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/actions/user.actions.ts:12",{"_index":264,"title":{},"body":{"classes/LoadCurrentUser.html":{}}}],["src/app/actions/user.actions.ts:16",{"_index":18,"title":{},"body":{"classes/AddCurrentUser.html":{}}}],["src/app/actions/user.actions.ts:18",{"_index":23,"title":{},"body":{"classes/AddCurrentUser.html":{}}}],["src/app/actions/user.actions.ts:23",{"_index":266,"title":{},"body":{"classes/LoadCurrentUserFail.html":{}}}],["src/app/actions/user.actions.ts:25",{"_index":267,"title":{},"body":{"classes/LoadCurrentUserFail.html":{}}}],["src/app/app",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.effects.t",{"_index":116,"title":{},"body":{"injectables/AppEffects.html":{},"coverage.html":{}}}],["src/app/app.effects.ts:6",{"_index":118,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.module.t",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/actions/dashboard.actions.t",{"_index":50,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:19",{"_index":268,"title":{},"body":{"classes/LoadDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:21",{"_index":269,"title":{},"body":{"classes/LoadDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:25",{"_index":54,"title":{},"body":{"classes/AddDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:27",{"_index":55,"title":{},"body":{"classes/AddDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:31",{"_index":285,"title":{},"body":{"classes/UpsertDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:33",{"_index":286,"title":{},"body":{"classes/UpsertDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:37",{"_index":78,"title":{},"body":{"classes/AddDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:39",{"_index":79,"title":{},"body":{"classes/AddDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:43",{"_index":287,"title":{},"body":{"classes/UpsertDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:45",{"_index":288,"title":{},"body":{"classes/UpsertDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:49",{"_index":281,"title":{},"body":{"classes/UpdateDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:51",{"_index":282,"title":{},"body":{"classes/UpdateDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:55",{"_index":283,"title":{},"body":{"classes/UpdateDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:57",{"_index":284,"title":{},"body":{"classes/UpdateDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:61",{"_index":254,"title":{},"body":{"classes/DeleteDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:63",{"_index":255,"title":{},"body":{"classes/DeleteDashboard.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:67",{"_index":256,"title":{},"body":{"classes/DeleteDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:69",{"_index":257,"title":{},"body":{"classes/DeleteDashboards.html":{}}}],["src/app/dashboard/actions/dashboard.actions.ts:73",{"_index":185,"title":{},"body":{"classes/ClearDashboards.html":{}}}],["src/app/dashboard/containers/dashboard/dashboard.component.t",{"_index":188,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/containers/dashboard/dashboard.component.ts:12",{"_index":195,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/containers/dashboard/dashboard.component.ts:8",{"_index":194,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/containers/index.t",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard",{"_index":221,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":210,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/effects/dashboard.effects.t",{"_index":200,"title":{},"body":{"injectables/DashboardEffects.html":{},"coverage.html":{}}}],["src/app/dashboard/effects/dashboard.effects.ts:9",{"_index":201,"title":{},"body":{"injectables/DashboardEffects.html":{}}}],["src/app/dashboard/models/dashboard.model.t",{"_index":187,"title":{},"body":{"interfaces/Dashboard.html":{},"coverage.html":{}}}],["src/app/dashboard/reducers/dashboard.reducer.t",{"_index":225,"title":{},"body":{"interfaces/DashboardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/effects/user.effects.t",{"_index":311,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/effects/user.effects.ts:11",{"_index":313,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/effects/user.effects.ts:17",{"_index":324,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/models/error",{"_index":258,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["src/app/models/user.model.t",{"_index":289,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/reducers/index.t",{"_index":270,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/reducers/user.reducer.t",{"_index":346,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.t",{"_index":332,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:10",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:7",{"_index":335,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.t",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":417,"title":{"index.html":{}},"body":{}}],["state",{"_index":98,"title":{"interfaces/State.html":{}},"body":{"components/AppComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":360,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["state.haserror",{"_index":358,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["state.load",{"_index":355,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":349,"title":{},"body":{"interfaces/UserState.html":{}}}],["statuscod",{"_index":261,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["statustext",{"_index":262,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["store",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["store.dispatch(new",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["storedevtoolsmodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":218,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forroot(reduc",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":75,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{}}}],["styleurl",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["support",{"_index":459,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":460,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":236,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/UserState.html":{}}}],["switchmap",{"_index":316,"title":{},"body":{"injectables/UserEffects.html":{}}}],["tabl",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["templateurl",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["test",{"_index":446,"title":{},"body":{"index.html":{}}}],["this.actions$.oftype(dashboardactiontypes.loaddashboard",{"_index":202,"title":{},"body":{"injectables/DashboardEffects.html":{}}}],["this.actions$.pipe(oftype(useractiontypes.loadcurrentus",{"_index":315,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.httpclient",{"_index":343,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.loadcurrentus",{"_index":317,"title":{},"body":{"injectables/UserEffects.html":{}}}],["tool",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"classes/ClearDashboards.html":{},"interfaces/Dashboard.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"interfaces/ErrorMessage.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"interfaces/State.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":470,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":299,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["updat",{"_index":57,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["updatedashboard",{"_index":65,"title":{"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["upsert",{"_index":64,"title":{},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"miscellaneous/enumerations.html":{}}}],["upsertdashboard",{"_index":63,"title":{"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{}},"body":{"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":437,"title":{},"body":{"index.html":{}}}],["usehash",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":16,"title":{"interfaces/User.html":{}},"body":{"classes/AddCurrentUser.html":{},"components/AppComponent.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.reduc",{"_index":278,"title":{},"body":{"interfaces/State.html":{}}}],["useract",{"_index":46,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{},"miscellaneous/typealiases.html":{}}}],["useractiontyp",{"_index":35,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["useractiontypes.addcurrentus",{"_index":26,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{}}}],["useractiontypes.loadcurrentus",{"_index":42,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{}}}],["useractiontypes.loadcurrentuserfail",{"_index":44,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"interfaces/UserState.html":{}}}],["usercredenti",{"_index":296,"title":{},"body":{"interfaces/User.html":{}}}],["usereffect",{"_index":156,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["userreduc",{"_index":277,"title":{},"body":{"interfaces/State.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userreducer(st",{"_index":415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userservic",{"_index":312,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userst",{"_index":272,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/State.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valu",{"_index":25,"title":{},"body":{"classes/AddCurrentUser.html":{},"classes/AddDashboard.html":{},"classes/AddDashboards.html":{},"classes/ClearDashboards.html":{},"injectables/DashboardEffects.html":{},"classes/DeleteDashboard.html":{},"classes/DeleteDashboards.html":{},"classes/LoadCurrentUser.html":{},"classes/LoadCurrentUserFail.html":{},"classes/LoadDashboards.html":{},"classes/UpdateDashboard.html":{},"classes/UpdateDashboards.html":{},"classes/UpsertDashboard.html":{},"classes/UpsertDashboards.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["variabl",{"_index":370,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":423,"title":{},"body":{"index.html":{}}}],["via",{"_index":448,"title":{},"body":{"index.html":{}}}],["view",{"_index":301,"title":{},"body":{"interfaces/User.html":{}}}],["visual",{"_index":303,"title":{},"body":{"interfaces/User.html":{}}}],["void",{"_index":197,"title":{},"body":{"components/DashboardComponent.html":{}}}],["work",{"_index":198,"title":{},"body":{"components/DashboardComponent.html":{}}}],["worker",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.j",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["zone.j",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddCurrentUser.html":{"url":"classes/AddCurrentUser.html","title":"class - AddCurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddCurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentUser: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/user.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentUser\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/user.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UserActionTypes.AddCurrentUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/user.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { ErrorMessage } from '../models/error-message.model';\n\nexport enum UserActionTypes {\n  LoadCurrentUser = '[User] Load current User',\n  AddCurrentUser = '[User] Add Current User',\n  LoadCurrentUserFail = '[User] Load Current User fail'\n}\n\nexport class LoadCurrentUser implements Action {\n  readonly type = UserActionTypes.LoadCurrentUser;\n}\n\nexport class AddCurrentUser implements Action {\n  readonly type = UserActionTypes.AddCurrentUser;\n\n  constructor(public currentUser: User) {\n  }\n}\n\nexport class LoadCurrentUserFail implements Action {\n  readonly type = UserActionTypes.LoadCurrentUserFail;\n\n  constructor(public error: ErrorMessage) {\n  }\n}\n\nexport type UserActions =\n  | LoadCurrentUser\n  | AddCurrentUser\n  | LoadCurrentUserFail;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddDashboard.html":{"url":"classes/AddDashboard.html","title":"class - AddDashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddDashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.AddDashboard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddDashboards.html":{"url":"classes/AddDashboards.html","title":"class - AddDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.AddDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { State } from './reducers/index';\nimport { LoadCurrentUser } from './actions/user.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private store: Store) {\n\n    // Load current user information\n    store.dispatch(new LoadCurrentUser());\n  }\n}\n\n    \n\n    \n        Button\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Button'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppEffects.html":{"url":"injectables/AppEffects.html","title":"injectable - AppEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.effects.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.effects.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\n\n\n@Injectable()\nexport class AppEffects {\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!\n\n!\n\nAppModule -->\n\n!->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    !\n                            \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppEffects } from './app.effects';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserEffects } from './effects/user.effects';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    /**\n     * Routing module\n     */\n    AppRoutingModule,\n\n    /**\n     * Module for registering service worker\n     */\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n\n    /**\n     * Module for registering ngrx store reducers\n     */\n    StoreModule.forRoot(reducers, { metaReducers }),\n\n    /**\n     * Module for registering ngrx store side effects\n     */\n    EffectsModule.forRoot([AppEffects, UserEffects]),\n\n    /**\n     * Development tool for debugging ngrx store operations\n     */\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'dashboards',\n    loadChildren: './dashboard/dashboard.module#DashboardModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearDashboards.html":{"url":"classes/ClearDashboards.html","title":"class - ClearDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.ClearDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dashboard.html":{"url":"interfaces/Dashboard.html","title":"interface - Dashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/dashboard.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dashboard {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard/dashboard.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  dashboard works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardEffects.html":{"url":"injectables/DashboardEffects.html","title":"injectable - DashboardEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DashboardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/dashboard.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                effect$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/dashboard.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effect$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effect$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$.ofType(DashboardActionTypes.LoadDashboards)\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/dashboard.effects.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { DashboardActions, DashboardActionTypes } from '../actions/dashboard.actions';\n\n@Injectable()\nexport class DashboardEffects {\n\n  @Effect()\n  effect$ = this.actions$.ofType(DashboardActionTypes.LoadDashboards);\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { containers } from './containers/index';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromDashboard from './reducers/dashboard.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DashboardEffects } from './effects/dashboard.effects';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    StoreModule.forFeature('dashboard', fromDashboard.reducer),\n    EffectsModule.forFeature([DashboardEffects])\n  ],\n  declarations: [...containers]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './containers/dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/dashboard.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\nimport { DashboardActions, DashboardActionTypes } from '../actions/dashboard.actions';\n\nexport interface DashboardState extends EntityState {\n  // additional entities state properties\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\n\nexport const initialState: DashboardState = adapter.getInitialState({\n  // additional entity state properties\n});\n\nexport function reducer(\n  state = initialState,\n  action: DashboardActions\n): DashboardState {\n  switch (action.type) {\n    case DashboardActionTypes.AddDashboard: {\n      return adapter.addOne(action.payload.dashboard, state);\n    }\n\n    case DashboardActionTypes.UpsertDashboard: {\n      return adapter.upsertOne(action.payload.dashboard, state);\n    }\n\n    case DashboardActionTypes.AddDashboards: {\n      return adapter.addMany(action.payload.dashboards, state);\n    }\n\n    case DashboardActionTypes.UpsertDashboards: {\n      return adapter.upsertMany(action.payload.dashboards, state);\n    }\n\n    case DashboardActionTypes.UpdateDashboard: {\n      return adapter.updateOne(action.payload.dashboard, state);\n    }\n\n    case DashboardActionTypes.UpdateDashboards: {\n      return adapter.updateMany(action.payload.dashboards, state);\n    }\n\n    case DashboardActionTypes.DeleteDashboard: {\n      return adapter.removeOne(action.payload.id, state);\n    }\n\n    case DashboardActionTypes.DeleteDashboards: {\n      return adapter.removeMany(action.payload.ids, state);\n    }\n\n    case DashboardActionTypes.LoadDashboards: {\n      return adapter.addAll(action.payload.dashboards, state);\n    }\n\n    case DashboardActionTypes.ClearDashboards: {\n      return adapter.removeAll(state);\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteDashboard.html":{"url":"classes/DeleteDashboard.html","title":"class - DeleteDashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteDashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.DeleteDashboard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteDashboards.html":{"url":"classes/DeleteDashboards.html","title":"class - DeleteDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.DeleteDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/error-message.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                                \n                                        statusText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorMessage {\n  statusCode: number;\n  statusText: string;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCurrentUser.html":{"url":"classes/LoadCurrentUser.html","title":"class - LoadCurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UserActionTypes.LoadCurrentUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/user.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { ErrorMessage } from '../models/error-message.model';\n\nexport enum UserActionTypes {\n  LoadCurrentUser = '[User] Load current User',\n  AddCurrentUser = '[User] Add Current User',\n  LoadCurrentUserFail = '[User] Load Current User fail'\n}\n\nexport class LoadCurrentUser implements Action {\n  readonly type = UserActionTypes.LoadCurrentUser;\n}\n\nexport class AddCurrentUser implements Action {\n  readonly type = UserActionTypes.AddCurrentUser;\n\n  constructor(public currentUser: User) {\n  }\n}\n\nexport class LoadCurrentUserFail implements Action {\n  readonly type = UserActionTypes.LoadCurrentUserFail;\n\n  constructor(public error: ErrorMessage) {\n  }\n}\n\nexport type UserActions =\n  | LoadCurrentUser\n  | AddCurrentUser\n  | LoadCurrentUserFail;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCurrentUserFail.html":{"url":"classes/LoadCurrentUserFail.html","title":"class - LoadCurrentUserFail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCurrentUserFail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: ErrorMessage)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/user.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    ErrorMessage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     ErrorMessage\n\n                    \n                \n                    \n                        \n                            Type :     ErrorMessage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/user.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UserActionTypes.LoadCurrentUserFail\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { ErrorMessage } from '../models/error-message.model';\n\nexport enum UserActionTypes {\n  LoadCurrentUser = '[User] Load current User',\n  AddCurrentUser = '[User] Add Current User',\n  LoadCurrentUserFail = '[User] Load Current User fail'\n}\n\nexport class LoadCurrentUser implements Action {\n  readonly type = UserActionTypes.LoadCurrentUser;\n}\n\nexport class AddCurrentUser implements Action {\n  readonly type = UserActionTypes.AddCurrentUser;\n\n  constructor(public currentUser: User) {\n  }\n}\n\nexport class LoadCurrentUserFail implements Action {\n  readonly type = UserActionTypes.LoadCurrentUserFail;\n\n  constructor(public error: ErrorMessage) {\n  }\n}\n\nexport type UserActions =\n  | LoadCurrentUser\n  | AddCurrentUser\n  | LoadCurrentUserFail;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadDashboards.html":{"url":"classes/LoadDashboards.html","title":"class - LoadDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.LoadDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n            \n                Description\n            \n            \n                Root state interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserState\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { userReducer, UserState } from './user.reducer';\n\n/**\n * Root state interface\n */\nexport interface State {\n  /**\n   * User state\n   */\n  user: UserState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: userReducer,\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n/**\n * Root state selector\n * @param {State} state\n * @returns {State} state\n */\nexport const getRootState = (state: State) => state;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDashboard.html":{"url":"classes/UpdateDashboard.html","title":"class - UpdateDashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.UpdateDashboard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDashboards.html":{"url":"classes/UpdateDashboards.html","title":"class - UpdateDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.UpdateDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpsertDashboard.html":{"url":"classes/UpsertDashboard.html","title":"class - UpsertDashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpsertDashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.UpsertDashboard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpsertDashboards.html":{"url":"classes/UpsertDashboards.html","title":"class - UpsertDashboards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpsertDashboards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/dashboard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/dashboard.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : DashboardActionTypes.UpsertDashboards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/dashboard.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Dashboard } from '../models/dashboard.model';\n\nexport enum DashboardActionTypes {\n  LoadDashboards = '[Dashboard] Load Dashboards',\n  AddDashboard = '[Dashboard] Add Dashboard',\n  UpsertDashboard = '[Dashboard] Upsert Dashboard',\n  AddDashboards = '[Dashboard] Add Dashboards',\n  UpsertDashboards = '[Dashboard] Upsert Dashboards',\n  UpdateDashboard = '[Dashboard] Update Dashboard',\n  UpdateDashboards = '[Dashboard] Update Dashboards',\n  DeleteDashboard = '[Dashboard] Delete Dashboard',\n  DeleteDashboards = '[Dashboard] Delete Dashboards',\n  ClearDashboards = '[Dashboard] Clear Dashboards'\n}\n\nexport class LoadDashboards implements Action {\n  readonly type = DashboardActionTypes.LoadDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class AddDashboard implements Action {\n  readonly type = DashboardActionTypes.AddDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class UpsertDashboard implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboard;\n\n  constructor(public payload: { dashboard: Dashboard }) {}\n}\n\nexport class AddDashboards implements Action {\n  readonly type = DashboardActionTypes.AddDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpsertDashboards implements Action {\n  readonly type = DashboardActionTypes.UpsertDashboards;\n\n  constructor(public payload: { dashboards: Dashboard[] }) {}\n}\n\nexport class UpdateDashboard implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboard;\n\n  constructor(public payload: { dashboard: Update }) {}\n}\n\nexport class UpdateDashboards implements Action {\n  readonly type = DashboardActionTypes.UpdateDashboards;\n\n  constructor(public payload: { dashboards: Update[] }) {}\n}\n\nexport class DeleteDashboard implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboard;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteDashboards implements Action {\n  readonly type = DashboardActionTypes.DeleteDashboards;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearDashboards implements Action {\n  readonly type = DashboardActionTypes.ClearDashboards;\n}\n\nexport type DashboardActions =\n LoadDashboards\n | AddDashboard\n | UpsertDashboard\n | AddDashboards\n | UpsertDashboards\n | UpdateDashboard\n | UpdateDashboards\n | DeleteDashboard\n | DeleteDashboards\n | ClearDashboards;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created\n                                \n                                \n                                        dataViewOrganisationUnits\n                                \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        lastUpdated\n                                \n                                \n                                        name\n                                \n                                \n                                        organisationUnits\n                                \n                                \n                                        userCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date user was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataViewOrganisationUnits\n                                    \n                                \n                                \n                                    \n                                        dataViewOrganisationUnits:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organisation Units the user is assigned to view reports and visualizations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User full name for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date user information was last updated\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User full name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organisationUnits\n                                    \n                                \n                                \n                                    \n                                        organisationUnits:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organisation Units user is assigned for data entry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userCredentials\n                                    \n                                \n                                \n                                    \n                                        userCredentials:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User credential information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /**\n   * User ID\n   */\n  id: string;\n\n  /**\n   * User full name\n   */\n  name: string;\n\n  /**\n   * User full name for display\n   */\n  displayName: string;\n\n  /**\n   * User email address\n   */\n  email: string;\n\n  /**\n   * Date user was created\n   */\n  created: string;\n\n  /**\n   * Date user information was last updated\n   */\n  lastUpdated: string;\n\n  /**\n   * Organisation Units the user is assigned to view reports and visualizations\n   */\n  dataViewOrganisationUnits: any[];\n\n  /**\n   * Organisation Units user is assigned for data entry\n   */\n  organisationUnits: any[];\n\n  /**\n   * User credential information\n   */\n  userCredentials: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/effects/user.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCurrentUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/effects/user.effects.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCurrentUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadCurrentUser$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(UserActionTypes.LoadCurrentUser),\n    switchMap(() => this.userService.loadCurrentUser().\n      pipe(map((user: User) => new AddCurrentUser(user)),\n        catchError((error: any) => of(new LoadCurrentUserFail({error}))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/effects/user.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs/index';\nimport { catchError, map, switchMap } from 'rxjs/internal/operators';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { AddCurrentUser, LoadCurrentUserFail, UserActionTypes } from '../actions/user.actions';\n\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(private actions$: Actions, private userService: UserService) {\n  }\n\n  @Effect()\n  loadCurrentUser$: Observable = this.actions$.pipe(ofType(UserActionTypes.LoadCurrentUser),\n    switchMap(() => this.userService.loadCurrentUser().\n      pipe(map((user: User) => new AddCurrentUser(user)),\n        catchError((error: any) => of(new LoadCurrentUserFail({error}))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: NgxDhis2HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    NgxDhis2HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxDhis2HttpClientService } from 'ngx-dhis2-http-client';\nimport { Observable } from 'rxjs/index';\nimport { User } from '../models/user.model';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n  constructor(private httpClient: NgxDhis2HttpClientService) {}\n\n  loadCurrentUser(): Observable {\n    return this.httpClient\n      .get(`me.json?fields=id,name,displayName,created,lastUpdated,email,\n    dataViewOrganisationUnits[id,name,level],organisationUnits[id,name,level],userCredentials[username]`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/user.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        hasError\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     ErrorMessage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ErrorMessage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User loading error\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                    \n                                \n                                \n                                    \n                                        hasError:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information error status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information loaded status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User loading status\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { User } from '../models/user.model';\nimport { UserActions, UserActionTypes } from '../actions/user.actions';\nimport { ErrorMessage } from '../models/error-message.model';\n\nexport interface UserState extends EntityState {\n  // additional entities state properties\n\n  /**\n   * User loading status\n   */\n  loading: boolean;\n\n  /**\n   * User information loaded status\n   */\n  loaded: boolean;\n\n  /**\n   * User information error status\n   */\n  hasError: boolean;\n\n  /**\n   * User loading error\n   */\n  error: ErrorMessage;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\n\nexport const initialState: UserState = adapter.getInitialState({\n  // additional entity state properties\n  loading: false,\n  loaded: false,\n  hasError: false,\n  error: null\n});\n\nexport function userReducer(\n  state = initialState,\n  action: UserActions\n): UserState {\n  switch (action.type) {\n    case UserActionTypes.LoadCurrentUser: {\n      return {...state, loading: true, loaded: false, hasError: false, error: null};\n    }\n\n    case UserActionTypes.AddCurrentUser: {\n      return adapter.addOne(action.currentUser, {...state, loading: false, loaded: true});\n    }\n\n    case UserActionTypes.LoadCurrentUserFail: {\n      return {...state, loading: false, hasError: true, error: action.error};\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n// additional selectors\n\n/**\n * User loading state selector\n * @param {UserState} state\n * @return {boolean} loading\n */\nexport const getUserLoadingState = (state: UserState) => state.loading;\nexport const getUserLoadedState = (state: UserState) => state.loaded;\nexport const getUserHasErrorState = (state: UserState) => state.hasError;\nexport const getUserErrorState = (state: UserState) => state.error;\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/actions/user.actions.ts\n            \n            \n                class\n            \n            \n                AddCurrentUser\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/actions/user.actions.ts\n            \n            \n                class\n            \n            \n                LoadCurrentUser\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/actions/user.actions.ts\n            \n            \n                class\n            \n            \n                LoadCurrentUserFail\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.effects.ts\n            \n            \n                injectable\n            \n            \n                AppEffects\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                AddDashboard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                AddDashboards\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                ClearDashboards\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                DeleteDashboard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                DeleteDashboards\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                LoadDashboards\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                UpdateDashboard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                UpdateDashboards\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                UpsertDashboard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/actions/dashboard.actions.ts\n            \n            \n                class\n            \n            \n                UpsertDashboards\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/dashboard/containers/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/dashboard/containers/index.ts\n            \n            \n                variable\n            \n            \n                containers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/effects/dashboard.effects.ts\n            \n            \n                injectable\n            \n            \n                DashboardEffects\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/dashboard/models/dashboard.model.ts\n            \n            \n                interface\n            \n            \n                Dashboard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/dashboard/reducers/dashboard.reducer.ts\n            \n            \n                interface\n            \n            \n                DashboardState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/reducers/dashboard.reducer.ts\n            \n            \n                function\n            \n            \n                reducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/reducers/dashboard.reducer.ts\n            \n            \n                variable\n            \n            \n                adapter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/reducers/dashboard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/reducers/dashboard.reducer.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/effects/user.effects.ts\n            \n            \n                injectable\n            \n            \n                UserEffects\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/models/error-message.model.ts\n            \n            \n                interface\n            \n            \n                ErrorMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                interface\n            \n            \n                State\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                variable\n            \n            \n                getRootState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                variable\n            \n            \n                metaReducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                interface\n            \n            \n                UserState\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                function\n            \n            \n                userReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                adapter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                getUserErrorState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                getUserHasErrorState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                getUserLoadedState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                getUserLoadingState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/user.reducer.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/services/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.2\n        \n            @angular/common : ^6.0.2\n        \n            @angular/compiler : ^6.0.2\n        \n            @angular/core : ^6.0.2\n        \n            @angular/forms : ^6.0.2\n        \n            @angular/http : ^6.0.2\n        \n            @angular/platform-browser : ^6.0.2\n        \n            @angular/platform-browser-dynamic : ^6.0.2\n        \n            @angular/pwa : ^0.6.8\n        \n            @angular/router : ^6.0.2\n        \n            @angular/service-worker : ^6.0.2\n        \n            @ngrx/effects : ^6.0.1\n        \n            @ngrx/entity : ^6.0.1\n        \n            @ngrx/store : ^6.0.1\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.4\n        \n            lodash : ^4.17.10\n        \n            ngx-dhis2-http-client : ^1.0.2\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DashboardActionTypes   (src/.../dashboard.actions.ts)\n                        \n                        \n                            UserActionTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/dashboard/actions/dashboard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        DashboardActionTypes\n                    \n                \n                        \n                            \n                                 LoadDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Load Dashboards\n                            \n                        \n                        \n                            \n                                 AddDashboard\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Add Dashboard\n                            \n                        \n                        \n                            \n                                 UpsertDashboard\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Upsert Dashboard\n                            \n                        \n                        \n                            \n                                 AddDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Add Dashboards\n                            \n                        \n                        \n                            \n                                 UpsertDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Upsert Dashboards\n                            \n                        \n                        \n                            \n                                 UpdateDashboard\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Update Dashboard\n                            \n                        \n                        \n                            \n                                 UpdateDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Update Dashboards\n                            \n                        \n                        \n                            \n                                 DeleteDashboard\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Delete Dashboard\n                            \n                        \n                        \n                            \n                                 DeleteDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Delete Dashboards\n                            \n                        \n                        \n                            \n                                 ClearDashboards\n                            \n                        \n                        \n                            \n                                Value: [Dashboard] Clear Dashboards\n                            \n                        \n            \n        \n\n    src/app/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionTypes\n                    \n                \n                        \n                            \n                                 LoadCurrentUser\n                            \n                        \n                        \n                            \n                                Value: [User] Load current User\n                            \n                        \n                        \n                            \n                                 AddCurrentUser\n                            \n                        \n                        \n                            \n                                Value: [User] Add Current User\n                            \n                        \n                        \n                            \n                                 LoadCurrentUserFail\n                            \n                        \n                        \n                            \n                                Value: [User] Load Current User fail\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            reducer   (src/.../dashboard.reducer.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/dashboard/reducers/dashboard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nuserReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIdashboard\nThis project was generated with Angular CLI version 6.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!\n\n!\n\nAppModule -->\n\n!->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            3 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DashboardActions   (src/.../dashboard.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/dashboard/actions/dashboard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        DashboardActions\n                    \n                \n                \n                    \n                        DashboardActions:     LoadDashboards | AddDashboard | UpsertDashboard | AddDashboards | UpsertDashboards | UpdateDashboard | UpdateDashboards | DeleteDashboard | DeleteDashboards | ClearDashboards\n\n                    \n                \n            \n        \n\n    src/app/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActions\n                    \n                \n                \n                    \n                        UserActions:     LoadCurrentUser | AddCurrentUser | LoadCurrentUserFail\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adapter   (src/.../user.reducer.ts)\n                        \n                        \n                            adapter   (src/.../dashboard.reducer.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            getRootState   (src/.../index.ts)\n                        \n                        \n                            getUserErrorState   (src/.../user.reducer.ts)\n                        \n                        \n                            getUserHasErrorState   (src/.../user.reducer.ts)\n                        \n                        \n                            getUserLoadedState   (src/.../user.reducer.ts)\n                        \n                        \n                            getUserLoadingState   (src/.../user.reducer.ts)\n                        \n                        \n                            initialState   (src/.../dashboard.reducer.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                               (src/.../user.reducer.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                               (src/.../dashboard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adapter:     EntityAdapter\n\n                    \n                \n                    \n                        \n                            Type :     EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserErrorState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUserErrorState:     \n\n                    \n                \n                    \n                        \n                            Default value : (state: UserState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserHasErrorState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUserHasErrorState:     \n\n                    \n                \n                    \n                        \n                            Default value : (state: UserState) => state.hasError\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLoadedState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUserLoadedState:     \n\n                    \n                \n                    \n                        \n                            Default value : (state: UserState) => state.loaded\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLoadingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUserLoadingState:     \n\n                    \n                \n                    \n                        \n                            Default value : (state: UserState) => state.loading\n                        \n                    \n\n                \n                    \n                        User loading state selector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     UserState\n\n                    \n                \n                    \n                        \n                            Type :     UserState\n\n                        \n                    \n                    \n                        \n                            Default value : adapter.getInitialState({\n  // additional entity state properties\n  loading: false,\n  loaded: false,\n  hasError: false,\n  error: null\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n                \n                    \n                        :     \n\n                    \n                \n                    \n                        \n                            Default value : adapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/dashboard/reducers/dashboard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adapter:     EntityAdapter\n\n                    \n                \n                    \n                        \n                            Type :     EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     DashboardState\n\n                    \n                \n                    \n                        \n                            Type :     DashboardState\n\n                        \n                    \n                    \n                        \n                            Default value : adapter.getInitialState({\n  // additional entity state properties\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n                \n                    \n                        :     \n\n                    \n                \n                    \n                        \n                            Default value : adapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/dashboard/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containers:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [DashboardComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/reducers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getRootState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getRootState:     \n\n                    \n                \n                    \n                        \n                            Default value : (state: State) => state\n                        \n                    \n\n                \n                    \n                        Root state selector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        metaReducers:     MetaReducer[]\n\n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: userReducer,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
