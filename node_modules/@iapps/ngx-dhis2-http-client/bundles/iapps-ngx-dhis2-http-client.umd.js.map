{"version":3,"file":"iapps-ngx-dhis2-http-client.umd.js.map","sources":["ng://@iapps/ngx-dhis2-http-client/lib/services/manifest.service.ts",null,"ng://@iapps/ngx-dhis2-http-client/lib/services/system-info.service.ts","ng://@iapps/ngx-dhis2-http-client/lib/constants/http-config.constant.ts","ng://@iapps/ngx-dhis2-http-client/lib/services/index-db.service.ts","ng://@iapps/ngx-dhis2-http-client/lib/services/ngx-dhis2-http-client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Manifest } from '../models';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/internal/operators';\n\n@Injectable({providedIn: 'root'})\nexport class ManifestService {\n  private _manifest: Manifest;\n  private _defaultRootUrl: string;\n  private _manifestLoaded: boolean;\n\n  constructor(private httpClient: HttpClient) {\n    this._defaultRootUrl = '../../../';\n    this._manifestLoaded = false;\n  }\n\n  public getManifest(): Observable<Manifest> {\n    return this._manifestLoaded ? of(this._manifest) : this.httpClient.get<Manifest>('manifest.webapp').pipe(\n      catchError(() => {\n        console.warn('Manifest file could not be loaded, default options have been used instead');\n        return of(null);\n      }),\n      tap((manifest) => {\n        this._manifest = manifest;\n        this._manifestLoaded = true;\n      }));\n  }\n\n  public getRootUrl(): Observable<string> {\n    return this.getManifest().pipe(map((manifest: Manifest) => {\n      if (!manifest) {\n        return this._defaultRootUrl;\n      }\n      return manifest.activities && manifest.activities.dhis && manifest.activities.dhis.href ?\n        manifest.activities.dhis.href : this._defaultRootUrl;\n    }));\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { ManifestService } from './manifest.service';\nimport { map, switchMap, tap } from 'rxjs/internal/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class SystemInfoService {\n  private _systemInfoLoaded: boolean;\n  private _systemInfo: any;\n\n  constructor(private manifestService: ManifestService, private httpClient: HttpClient) {\n    this._systemInfoLoaded = false;\n  }\n\n  getSystemInfo(): Observable<any> {\n    return this._systemInfoLoaded ? of(this._systemInfo) :\n      this.manifestService.getRootUrl().pipe(\n        switchMap((rootUrl: string) => forkJoin(this.httpClient.get(`${rootUrl}api/system/info`),\n          this.httpClient.get(`${rootUrl}api/systemSettings`)).pipe(map((res: any[]) => {\n          return {...res[0], ...res[1]};\n        }), tap((systemInfo: any) => {\n          this._systemInfo = systemInfo;\n          this._systemInfoLoaded = true;\n        }))));\n  }\n\n  public getSystemVersion(): Observable<number> {\n    return this.getSystemInfo().pipe(map((systemInfo: any) => {\n      if (!systemInfo) {\n        return 0;\n      }\n      const splitedVersion = systemInfo.version ? systemInfo.version.split('.') : [];\n      return parseInt(splitedVersion[1], 10) || 0;\n    }));\n  }\n}\n","import { HttpConfig } from '../models/http-config.model';\n\nexport const HTTP_CONFIG: HttpConfig = {\n  includeVersionNumber: false,\n  preferPreviousApiVersion: false,\n  useRootUrl: false,\n  useIndexDb: false,\n  isExternalLink: false\n};\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as _ from 'lodash';\nimport { switchMap, mergeMap, tap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class IndexDbService {\n  private _indexedDB: any;\n  private _dbName: string;\n\n  constructor() {\n    this._indexedDB = indexedDB;\n    this._dbName = 'db'; // by default\n  }\n\n  setName(dbName: string): void {\n    if (dbName) {\n      this._dbName = dbName;\n    }\n  }\n\n  /**\n   * Function to update existing data in the db\n   */\n  put(schema: any, data: any): Observable<any> {\n    return Observable.create((observer: any) => {\n      this.create(schema)\n        .pipe(switchMap(() => this.open()))\n        .subscribe((db: any) => {\n          const transaction = db.transaction(schema.name, 'readwrite');\n          const store = transaction.objectStore(schema.name);\n\n          if (_.isArray(data)) {\n            _.each(data, dataItem => {\n              store.put(dataItem);\n            });\n          } else {\n            store.put(data);\n          }\n\n          transaction.oncomplete = () => {\n            observer.next(data);\n            db.close();\n            observer.complete();\n          };\n          db.onerror = (errorEvent: any) => {\n            db.close();\n            observer.error(errorEvent.target.errorCode);\n          };\n        });\n    });\n  }\n\n  /**\n   * Function to add new data in the db\n   */\n  post(schema: any, data: any): Observable<any> {\n    return Observable.create((observer: any) => {\n      this.create(schema)\n        .pipe(mergeMap(() => this.open()))\n        .subscribe((db: any) => {\n          const transaction = db.transaction(schema.name, 'readwrite');\n          const store = transaction.objectStore(schema.name);\n\n          // Check if data is array or an object\n          if (_.isArray(data)) {\n            _.each(data, dataItem => {\n              store.add(dataItem);\n            });\n          } else {\n            store.add(data);\n          }\n\n          transaction.oncomplete = () => {\n            observer.next(data);\n            db.close();\n            observer.complete();\n          };\n          db.onerror = () => {\n            observer.next(data);\n            db.close();\n            observer.complete();\n          };\n        });\n    });\n  }\n\n  /**\n   * Function to get value for a particular key from the table\n   */\n  findOne(schema: any, key: string): Observable<any[]> {\n    return new Observable((observer: any) => {\n      this.create(schema)\n        .pipe(mergeMap(() => this.open()))\n        .subscribe((db: any) => {\n          const transaction = db.transaction(schema.name, 'readwrite');\n          const store = transaction.objectStore(schema.name);\n          const request = store.get(key);\n          request.onsuccess = successEvent => {\n            observer.next(successEvent.target.result);\n            db.close();\n            observer.complete();\n          };\n          db.onerror = (event: any) => {\n            console.log(event.target.errorCode);\n            db.close();\n            observer.error(event.target.errorCode);\n          };\n        });\n    });\n  }\n\n  /**\n   * Function to find all values for a particular table in the db\n   */\n  findAll(schema: any): Observable<any[]> {\n    return Observable.create((observer: any) => {\n      this.create(schema)\n        .pipe(switchMap(() => this.open()))\n        .subscribe((db: any) => {\n          const transaction = db.transaction(schema.name, 'readwrite');\n          const store = transaction.objectStore(schema.name);\n          const storeIndex = store.index(schema.keyPath);\n          const request = storeIndex.openCursor();\n          let results: any[] = [];\n\n          request.onsuccess = successEvent => {\n            const cursor = successEvent.target.result;\n            if (cursor) {\n              results = [...results, cursor.value];\n              cursor.continue();\n            } else {\n              observer.next(results);\n              db.close();\n              observer.complete();\n            }\n          };\n          db.onerror = (event: any) => {\n            db.close();\n            observer.error(event.target.errorCode);\n          };\n        });\n    });\n  }\n\n  /**\n   * Delete data from the db\n   */\n  delete(schema: any, key: string | string[]): Observable<any> {\n    return Observable.create((observer: any) => {\n      this.open().subscribe((db: any) => {\n        if (!db.objectStoreNames.contains(schema.name)) {\n          const transaction = db.transaction(schema.name, 'readwrite');\n          const store = transaction.objectStore(schema.name);\n\n          if (_.isArray(key)) {\n            _.each(key, keyItem => {\n              store.delete(keyItem);\n            });\n          } else {\n            store.delete(key);\n          }\n\n          transaction.oncomplete = () => {\n            observer.next(key);\n            db.close();\n            observer.complete();\n          };\n          db.onerror = (errorEvent: any) => {\n            db.close();\n            observer.error(errorEvent.target.errorCode);\n          };\n        }\n      });\n    });\n  }\n\n  /**\n   * Create a schema/table\n   */\n  create(schema: any): Observable<any> {\n    return Observable.create((observer: any) => {\n      this.open().subscribe((requestResult: any) => {\n        if (!requestResult.objectStoreNames.contains(schema.name)) {\n          /**\n           * Close database to allow opening with new version\n           */\n          requestResult.close();\n\n          /**\n           * Set a new connection with new version to allows creating schema\n           */\n          const request = this._indexedDB.open(\n            this._dbName,\n            requestResult.version + 1\n          );\n\n          request.onupgradeneeded = event => {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(schema.name)) {\n              /**\n               * Create corresponding schema\n               */\n              const store = db.createObjectStore(schema.name, {\n                keyPath: schema.keyPath\n              });\n              store.createIndex(schema.keyPath, schema.keyPath, {\n                unique: true\n              });\n\n              /**\n               * Create indexes for schema if supplied\n               */\n              if (schema.indexes) {\n                _.each(schema.indexes, (schemaIndex: any) => {\n                  store.createIndex(schemaIndex, schemaIndex);\n                });\n              }\n\n              /**\n               * Add data if supplied\n               */\n              if (schema.data) {\n                _.each(schema.data, (dataItem: any) => {\n                  store.put(dataItem);\n                });\n              }\n            }\n\n            observer.next('done');\n            observer.complete();\n          };\n\n          request.onerror = errorEvent => {\n            observer.error(errorEvent.target.errorCode);\n          };\n\n          request.onsuccess = successEvent => {\n            successEvent.target.result.close();\n            observer.next('done');\n            observer.complete();\n          };\n        } else {\n          observer.next('done');\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  /**\n   * Delete the whole database\n   */\n  clear(): Observable<any> {\n    return Observable.create((observer: any) => {\n      const request = this._indexedDB.deleteDatabase(this._dbName);\n\n      request.onsuccess = () => {\n        observer.next('done');\n        observer.complete();\n      };\n      request.onerror = errorEvent => {\n        observer.error(errorEvent.target.errorCode);\n      };\n      request.onblocked = blockEvent => {\n        observer.error(blockEvent.target.errorCode);\n      };\n    });\n  }\n\n  private open(): Observable<any> {\n    return Observable.create((observer: any) => {\n      const request = this._indexedDB.open(this._dbName);\n\n      request.onsuccess = successEvent => {\n        observer.next(successEvent.target.result);\n        observer.complete();\n      };\n      request.onerror = errorEvent =>\n        observer.error(errorEvent.target.errorCode);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ManifestService } from './manifest.service';\nimport { SystemInfoService } from './system-info.service';\nimport { Observable, throwError, of } from 'rxjs';\nimport {\n  catchError,\n  map,\n  mergeMap,\n  switchMap,\n  tap\n} from 'rxjs/internal/operators';\nimport { HttpConfig, IndexDbSchema } from '../models/http-config.model';\nimport { HTTP_CONFIG } from '../constants/http-config.constant';\nimport { IndexDbService } from './index-db.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NgxDhis2HttpClientService {\n  constructor(\n    private httpClient: HttpClient,\n    private manifestService: ManifestService,\n    private systemInfoService: SystemInfoService,\n    private indexDbService: IndexDbService\n  ) {}\n\n  get(url: string, httpConfig?: HttpConfig): Observable<any> {\n    const newHttpConfig = { ...HTTP_CONFIG, ...httpConfig };\n\n    // Make a call directly from url if is external one\n    if (newHttpConfig.isExternalLink) {\n      return this.httpClient.get(url);\n    }\n\n    // load from index db\n    if (newHttpConfig.useIndexDb) {\n      return this._fetchFromIndexDb(newHttpConfig).pipe(\n        mergeMap((indexDbResponse: any) =>\n          indexDbResponse\n            ? of(indexDbResponse)\n            : this._get(url, newHttpConfig).pipe(\n                mergeMap((response: any) =>\n                  this._updateIndexDb(newHttpConfig, response)\n                )\n              )\n        )\n      );\n    }\n\n    return this._get(url, newHttpConfig);\n  }\n\n  post(url: string, data: any, httpConfig?: HttpConfig) {\n    const newHttpConfig = { ...HTTP_CONFIG, ...httpConfig };\n\n    return this._getSanitizedRootUrl(newHttpConfig).pipe(\n      mergeMap(rootUrl =>\n        this.httpClient\n          .post(rootUrl + url, data)\n          .pipe(\n            mergeMap((response: any) => {\n              const dataId = response.uid;\n              return newHttpConfig.useIndexDb\n                ? dataId\n                  ? this._updateIndexDb(\n                      newHttpConfig,\n                      {\n                        ...data,\n                        id: dataId\n                      },\n                      'CREATE'\n                    ).pipe(map(() => response))\n                  : of(response)\n                : of(response);\n            })\n          )\n          .pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  put(url: string, data: any, httpConfig?: HttpConfig) {\n    const newHttpConfig = { ...HTTP_CONFIG, ...httpConfig };\n\n    return this._getSanitizedRootUrl(newHttpConfig).pipe(\n      mergeMap(rootUrl =>\n        this.httpClient.put(rootUrl + url, data).pipe(\n          mergeMap((response: any) =>\n            newHttpConfig.useIndexDb\n              ? this._updateIndexDb(newHttpConfig, data, 'UPDATE').pipe(\n                  map(() => response)\n                )\n              : of(response)\n          ),\n          catchError(this._handleError)\n        )\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  delete(url: string, httpConfig?: HttpConfig) {\n    const newHttpConfig = { ...HTTP_CONFIG, ...httpConfig };\n\n    return this._getSanitizedRootUrl(newHttpConfig).pipe(\n      mergeMap(rootUrl =>\n        this.httpClient\n          .delete(rootUrl + url)\n          .pipe(\n            mergeMap((response: any) =>\n              newHttpConfig.useIndexDb\n                ? this._updateIndexDb(newHttpConfig, null, 'DELETE').pipe(\n                    map(() => response)\n                  )\n                : of(response)\n            )\n          )\n          .pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  // private methods\n\n  private _get(url, httpConfig: HttpConfig) {\n    return this._getSanitizedRootUrl(httpConfig).pipe(\n      mergeMap(rootUrl =>\n        this.httpClient.get(rootUrl + url).pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n  private _handleError(err: HttpErrorResponse) {\n    let error = null;\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      error = {\n        message: err.error,\n        status: err.status,\n        statusText: err.statusText\n      };\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      error = {\n        message:\n          err.error instanceof Object\n            ? err.error.message\n            : err.error || err.message,\n        status: err.status,\n        statusText: err.statusText\n      };\n    }\n    return throwError(error);\n  }\n\n  private _getSanitizedRootUrl(httpConfig: HttpConfig) {\n    return httpConfig.useRootUrl\n      ? this.manifestService.getRootUrl()\n      : this._getApiRootUrl(\n          httpConfig.includeVersionNumber,\n          httpConfig.preferPreviousApiVersion\n        );\n  }\n\n  private _getApiRootUrl(\n    includeVersionNumber: boolean = false,\n    preferPreviousVersion: boolean = false\n  ) {\n    const rootUrlPromise = this.manifestService.getRootUrl().pipe(\n      switchMap(rootUrl =>\n        this.systemInfoService.getSystemVersion().pipe(\n          map((version: number) => {\n            return {\n              rootUrl,\n              version: version - 1 <= 25 ? version + 1 : version\n            };\n          })\n        )\n      )\n    );\n    return rootUrlPromise.pipe(\n      map(\n        (urlInfo: { rootUrl: string; version: number }) =>\n          `${urlInfo.rootUrl}api/${\n            includeVersionNumber && !preferPreviousVersion\n              ? urlInfo.version + '/'\n              : preferPreviousVersion\n              ? urlInfo.version\n                ? urlInfo.version - 1 + '/'\n                : ''\n              : ''\n          }`\n      )\n    );\n  }\n\n  private _updateIndexDb(\n    httpConfig: HttpConfig,\n    requestData: any,\n    action: string = 'CREATE'\n  ) {\n    const indexDbSchema: IndexDbSchema = httpConfig.indexDbConfig\n      ? httpConfig.indexDbConfig.schema\n      : null;\n\n    const arrayKey = httpConfig.indexDbConfig\n      ? httpConfig.indexDbConfig.arrayKey\n      : null;\n\n    const indexDbKey = httpConfig.indexDbConfig\n      ? httpConfig.indexDbConfig.key\n      : null;\n\n    const data = arrayKey ? requestData[arrayKey] : requestData;\n\n    switch (action) {\n      case 'CREATE':\n      case 'UPDATE':\n        return (action === 'CREATE'\n          ? this.indexDbService.post(indexDbSchema, data)\n          : this.indexDbService.put(indexDbSchema, data)\n        ).pipe(\n          map(() => requestData),\n          catchError(e => {\n            console.warn('Could not save data into index DB, ERROR: ' + e);\n            return of(requestData);\n          })\n        );\n      case 'DELETE':\n        return this.indexDbService.delete(indexDbSchema, indexDbKey).pipe(\n          map(() => requestData),\n          catchError(e => {\n            console.warn('Could not delete data from index DB, ERROR: ' + e);\n            return of(requestData);\n          })\n        );\n      default:\n        console.log('No action has been specified');\n        return of(requestData);\n    }\n  }\n\n  private _fetchFromIndexDb(httpConfig: HttpConfig) {\n    const indexDbSchema: IndexDbSchema = httpConfig.indexDbConfig\n      ? httpConfig.indexDbConfig.schema\n      : null;\n\n    const indexDbKey = httpConfig.indexDbConfig\n      ? httpConfig.indexDbConfig.key\n      : null;\n\n    return indexDbKey\n      ? this.indexDbService.findOne(indexDbSchema, indexDbKey)\n      : this.indexDbService.findAll(indexDbSchema).pipe(\n          map(response => {\n            const arrayKey = httpConfig.indexDbConfig\n              ? httpConfig.indexDbConfig.arrayKey\n              : null;\n            return response.length > 0\n              ? arrayKey\n                ? { [arrayKey]: response }\n                : response\n              : null;\n          })\n        );\n  }\n}\n"],"names":["of","catchError","tap","map","Injectable","HttpClient","switchMap","forkJoin","Observable","_.isArray","_.each","mergeMap","throwError"],"mappings":"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"}
