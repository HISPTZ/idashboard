/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { catchError } from 'rxjs/operators';
import { of } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var MenuNotificationService = /** @class */ (function () {
    function MenuNotificationService(httpClient) {
        this.httpClient = httpClient;
    }
    /**
     * @param {?} rootUrl
     * @return {?}
     */
    MenuNotificationService.prototype.loadNotification = /**
     * @param {?} rootUrl
     * @return {?}
     */
    function (rootUrl) {
        return this.httpClient.get(rootUrl + "api/me/dashboard.json").pipe(catchError(function () { return of(null); }));
    };
    MenuNotificationService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] },
    ];
    /** @nocollapse */
    MenuNotificationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ MenuNotificationService.ngInjectableDef = i0.defineInjectable({ factory: function MenuNotificationService_Factory() { return new MenuNotificationService(i0.inject(i1.HttpClient)); }, token: MenuNotificationService, providedIn: "root" });
    return MenuNotificationService;
}());
export { MenuNotificationService };
function MenuNotificationService_tsickle_Closure_declarations() {
    /** @type {?} */
    MenuNotificationService.prototype.httpClient;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1ub3RpZmljYXRpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpYXBwcy9uZ3gtZGhpczItbWVudS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9tZW51LW5vdGlmaWNhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7OztJQUlwQyxpQ0FBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtLQUV6Qzs7Ozs7SUFFRCxrREFBZ0I7Ozs7SUFBaEIsVUFBaUIsT0FBZTtRQUM5QixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUksT0FBTywwQkFBdUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBUixDQUFRLENBQUMsQ0FBQyxDQUFDO0tBQ2hHOztnQkFSRixVQUFVLFNBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDOzs7O2dCQUp2QixVQUFVOzs7a0NBRG5COztTQU1hLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBjYXRjaEVycm9yIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXG5leHBvcnQgY2xhc3MgTWVudU5vdGlmaWNhdGlvblNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHBDbGllbnQ6IEh0dHBDbGllbnQpIHtcblxuICB9XG5cbiAgbG9hZE5vdGlmaWNhdGlvbihyb290VXJsOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnQuZ2V0KGAke3Jvb3RVcmx9YXBpL21lL2Rhc2hib2FyZC5qc29uYCkucGlwZShjYXRjaEVycm9yKCgpID0+IG9mKG51bGwpKSk7XG4gIH1cbn1cbiJdfQ==