/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
var AbbreviatePipe = /** @class */ (function () {
    function AbbreviatePipe() {
    }
    /**
     * @param {?} name
     * @param {?=} args
     * @return {?}
     */
    AbbreviatePipe.prototype.transform = /**
     * @param {?} name
     * @param {?=} args
     * @return {?}
     */
    function (name, args) {
        var /** @type {?} */ abbreviatedName = [];
        var /** @type {?} */ count = 0;
        if (name) {
            for (var /** @type {?} */ i = 0; i <= name.length - 1; i++) {
                if (i === 0) {
                    abbreviatedName.push(name[i].toUpperCase());
                }
                else {
                    if (name[i] === ' ') {
                        count = i;
                        abbreviatedName.push(name[count + 1].toUpperCase());
                    }
                }
            }
        }
        return abbreviatedName.join('');
    };
    AbbreviatePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'abbreviate'
                },] },
    ];
    return AbbreviatePipe;
}());
export { AbbreviatePipe };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJicmV2aWF0ZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGlhcHBzL25neC1kaGlzMi1tZW51LyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2FiYnJldmlhdGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7OztJQU9oRCxrQ0FBUzs7Ozs7SUFBVCxVQUFVLElBQVksRUFBRSxJQUFVO1FBQ2hDLHFCQUFNLGVBQWUsR0FBVSxFQUFFLENBQUM7UUFDbEMscUJBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDVCxHQUFHLENBQUMsQ0FBQyxxQkFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUMxQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDWixlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2lCQUM3QztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzt3QkFDcEIsS0FBSyxHQUFHLENBQUMsQ0FBQzt3QkFDVixlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztxQkFDckQ7aUJBQ0Y7YUFDRjtTQUNGO1FBRUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDakM7O2dCQXRCRixJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLFlBQVk7aUJBQ25COzt5QkFKRDs7U0FLYSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICBuYW1lOiAnYWJicmV2aWF0ZSdcbn0pXG5leHBvcnQgY2xhc3MgQWJicmV2aWF0ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0obmFtZTogc3RyaW5nLCBhcmdzPzogYW55KTogYW55IHtcbiAgICBjb25zdCBhYmJyZXZpYXRlZE5hbWU6IGFueVtdID0gW107XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBpZiAobmFtZSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbmFtZS5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgICBhYmJyZXZpYXRlZE5hbWUucHVzaChuYW1lW2ldLnRvVXBwZXJDYXNlKCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChuYW1lW2ldID09PSAnICcpIHtcbiAgICAgICAgICAgIGNvdW50ID0gaTtcbiAgICAgICAgICAgIGFiYnJldmlhdGVkTmFtZS5wdXNoKG5hbWVbY291bnQgKyAxXS50b1VwcGVyQ2FzZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYWJicmV2aWF0ZWROYW1lLmpvaW4oJycpO1xuICB9XG5cbn1cbiJdfQ==