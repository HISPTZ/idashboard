/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { MenuNotificationService } from '../../services/menu-notification.service';
import { MenuService } from '../../services/menu.service';
import { filter } from 'rxjs/operators';
import * as _ from 'lodash';
var MenuNotificationComponent = /** @class */ (function () {
    function MenuNotificationComponent(menuNotificationService, menuService) {
        this.menuNotificationService = menuNotificationService;
        this.menuService = menuService;
        this.notificationMenuLinks = {};
    }
    /**
     * @return {?}
     */
    MenuNotificationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.menuNotificationService.loadNotification(this.rootUrl).subscribe(function (notificationResults) {
            _this.menuNotification = notificationResults;
        });
        this.menuService.getSanitizedMenus().pipe(filter(function (result) { return result.length > 0; })).
            subscribe(function (sanitizedMenus) {
            _.each(_.filter(sanitizedMenus, function (menuItem) { return menuItem.name.indexOf('interpretation') !== -1 || menuItem.name.indexOf('messaging') !== -1; }), function (menuItem) {
                if (menuItem.name.indexOf('interpretation') !== -1) {
                    _this.notificationMenuLinks['interpretation'] = menuItem.defaultAction;
                }
                else if (menuItem.name.indexOf('messaging') !== -1) {
                    _this.notificationMenuLinks['message'] = menuItem.defaultAction;
                }
            });
        });
    };
    MenuNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-menu-notification',
                    template: "<div class=\"menu-notification\" *ngIf=\"menuNotification\">\n  <a class=\"menu-chat-notification\"\n     *ngIf=\"notificationMenuLinks.interpretation\"\n     [href]=\"notificationMenuLinks.interpretation\"\n     title=\"You have {{ menuNotification.unreadInterpretations }} unread interpretations\"\n  >\n    <div *ngIf=\"menuNotification.unreadInterpretations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadInterpretations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"></path>\n    </svg>\n  </a>\n  <a class=\"menu-message-conversation-notification\"\n     *ngIf=\"notificationMenuLinks.message\"\n     [href]=\"notificationMenuLinks.message\"\n     title=\"You have {{ menuNotification.unreadMessageConversations }} unread message conversations\"\n  >\n    <div *ngIf=\"menuNotification.unreadMessageConversations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadMessageConversations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"></path>\n    </svg>\n  </a>\n</div>\n",
                    styles: [".menu-notification{display:flex;align-items:center;justify-content:space-around}.menu-chat-notification{padding-top:5px;margin-right:10px}.menu-message-conversation-notification{padding-top:4px;margin-left:10px}.menu-chat-notification,.menu-message-conversation-notification{position:relative}.menu-notification-badge{display:flex;flex-flow:row wrap;place-content:center;align-items:center;position:absolute;top:-4px;right:-6px;font-weight:500;font-size:9px;width:20px;height:20px;border-radius:50%;background-color:#4ca899;color:#fff;z-index:10}"]
                },] },
    ];
    /** @nocollapse */
    MenuNotificationComponent.ctorParameters = function () { return [
        { type: MenuNotificationService },
        { type: MenuService }
    ]; };
    MenuNotificationComponent.propDecorators = {
        rootUrl: [{ type: Input }]
    };
    return MenuNotificationComponent;
}());
export { MenuNotificationComponent };
function MenuNotificationComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    MenuNotificationComponent.prototype.rootUrl;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuNotification;
    /** @type {?} */
    MenuNotificationComponent.prototype.notificationMenuLinks;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuNotificationService;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGlhcHBzL25neC1kaGlzMi1tZW51LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbWVudS1ub3RpZmljYXRpb24vbWVudS1ub3RpZmljYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNuRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3hDLE9BQU8sS0FBSyxDQUFDLE1BQU0sUUFBUSxDQUFDOztJQThDMUIsbUNBQW9CLHVCQUFnRCxFQUFVLFdBQXdCO1FBQWxGLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7UUFBVSxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtxQ0FGekUsRUFBRTtLQUc5Qjs7OztJQUVELDRDQUFROzs7SUFBUjtRQUFBLGlCQWdCQztRQWZDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUMsbUJBQXdCO1lBQzdGLEtBQUksQ0FBQyxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQztTQUM3QyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFDLE1BQWEsSUFBSyxPQUFBLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFqQixDQUFpQixDQUFDLENBQUM7WUFDckYsU0FBUyxDQUFDLFVBQUMsY0FBbUI7WUFDNUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFDNUIsVUFBQSxRQUFRLElBQUksT0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUEzRixDQUEyRixDQUFDLEVBQUUsVUFBQSxRQUFRO2dCQUNsSCxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDbkQsS0FBSSxDQUFDLHFCQUFxQixDQUFDLGdCQUFnQixDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQztpQkFDdkU7Z0JBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDckQsS0FBSSxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUM7aUJBQ2hFO2FBQ0YsQ0FBQyxDQUFDO1NBQ0osQ0FBQyxDQUFDO0tBQ047O2dCQS9ERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLDRxREE4Qlg7b0JBQ0MsTUFBTSxFQUFFLENBQUMsb2lCQUFvaUIsQ0FBQztpQkFDL2lCOzs7O2dCQXZDUSx1QkFBdUI7Z0JBQ3ZCLFdBQVc7OzswQkF5Q2pCLEtBQUs7O29DQTNDUjs7U0F5Q2EseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZW51Tm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21lbnUtbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTWVudVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tZW51LnNlcnZpY2UnO1xuaW1wb3J0IHsgZmlsdGVyIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtbWVudS1ub3RpZmljYXRpb24nLFxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJtZW51LW5vdGlmaWNhdGlvblwiICpuZ0lmPVwibWVudU5vdGlmaWNhdGlvblwiPlxuICA8YSBjbGFzcz1cIm1lbnUtY2hhdC1ub3RpZmljYXRpb25cIlxuICAgICAqbmdJZj1cIm5vdGlmaWNhdGlvbk1lbnVMaW5rcy5pbnRlcnByZXRhdGlvblwiXG4gICAgIFtocmVmXT1cIm5vdGlmaWNhdGlvbk1lbnVMaW5rcy5pbnRlcnByZXRhdGlvblwiXG4gICAgIHRpdGxlPVwiWW91IGhhdmUge3sgbWVudU5vdGlmaWNhdGlvbi51bnJlYWRJbnRlcnByZXRhdGlvbnMgfX0gdW5yZWFkIGludGVycHJldGF0aW9uc1wiXG4gID5cbiAgICA8ZGl2ICpuZ0lmPVwibWVudU5vdGlmaWNhdGlvbi51bnJlYWRJbnRlcnByZXRhdGlvbnMgPiAwXCIgY2xhc3M9XCJtZW51LW5vdGlmaWNhdGlvbi1iYWRnZVwiPlxuICAgICAge3ttZW51Tm90aWZpY2F0aW9uLnVucmVhZEludGVycHJldGF0aW9uc319XG4gICAgPC9kaXY+XG4gICAgPHN2ZyBjbGFzcz1cIlwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIlxuICAgICAgICAgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyBmaWxsOiB3aGl0ZTsgaGVpZ2h0OiAyNHB4OyB3aWR0aDogMjRweDsgdXNlci1zZWxlY3Q6IG5vbmU7IHRyYW5zaXRpb246IGFsbCA0NTBtcyBjdWJpYy1iZXppZXIoMC4yMywgMSwgMC4zMiwgMSkgMG1zO1wiPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk0yMCAySDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAyMmw0LTRoMTRjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTIgMTJINnYtMmgxMnYyem0wLTNINlY5aDEydjJ6bTAtM0g2VjZoMTJ2MnpcIj48L3BhdGg+XG4gICAgPC9zdmc+XG4gIDwvYT5cbiAgPGEgY2xhc3M9XCJtZW51LW1lc3NhZ2UtY29udmVyc2F0aW9uLW5vdGlmaWNhdGlvblwiXG4gICAgICpuZ0lmPVwibm90aWZpY2F0aW9uTWVudUxpbmtzLm1lc3NhZ2VcIlxuICAgICBbaHJlZl09XCJub3RpZmljYXRpb25NZW51TGlua3MubWVzc2FnZVwiXG4gICAgIHRpdGxlPVwiWW91IGhhdmUge3sgbWVudU5vdGlmaWNhdGlvbi51bnJlYWRNZXNzYWdlQ29udmVyc2F0aW9ucyB9fSB1bnJlYWQgbWVzc2FnZSBjb252ZXJzYXRpb25zXCJcbiAgPlxuICAgIDxkaXYgKm5nSWY9XCJtZW51Tm90aWZpY2F0aW9uLnVucmVhZE1lc3NhZ2VDb252ZXJzYXRpb25zID4gMFwiIGNsYXNzPVwibWVudS1ub3RpZmljYXRpb24tYmFkZ2VcIj5cbiAgICAgIHt7bWVudU5vdGlmaWNhdGlvbi51bnJlYWRNZXNzYWdlQ29udmVyc2F0aW9uc319XG4gICAgPC9kaXY+XG4gICAgPHN2ZyBjbGFzcz1cIlwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIlxuICAgICAgICAgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyBmaWxsOiB3aGl0ZTsgaGVpZ2h0OiAyNHB4OyB3aWR0aDogMjRweDsgdXNlci1zZWxlY3Q6IG5vbmU7IHRyYW5zaXRpb246IGFsbCA0NTBtcyBjdWJpYy1iZXppZXIoMC4yMywgMSwgMC4zMiwgMSkgMG1zO1wiPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk0yMCA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bTAgNGwtOCA1LTgtNVY2bDggNSA4LTV2MnpcIj48L3BhdGg+XG4gICAgPC9zdmc+XG4gIDwvYT5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYC5tZW51LW5vdGlmaWNhdGlvbntkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmR9Lm1lbnUtY2hhdC1ub3RpZmljYXRpb257cGFkZGluZy10b3A6NXB4O21hcmdpbi1yaWdodDoxMHB4fS5tZW51LW1lc3NhZ2UtY29udmVyc2F0aW9uLW5vdGlmaWNhdGlvbntwYWRkaW5nLXRvcDo0cHg7bWFyZ2luLWxlZnQ6MTBweH0ubWVudS1jaGF0LW5vdGlmaWNhdGlvbiwubWVudS1tZXNzYWdlLWNvbnZlcnNhdGlvbi1ub3RpZmljYXRpb257cG9zaXRpb246cmVsYXRpdmV9Lm1lbnUtbm90aWZpY2F0aW9uLWJhZGdle2Rpc3BsYXk6ZmxleDtmbGV4LWZsb3c6cm93IHdyYXA7cGxhY2UtY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3Bvc2l0aW9uOmFic29sdXRlO3RvcDotNHB4O3JpZ2h0Oi02cHg7Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZTo5cHg7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtib3JkZXItcmFkaXVzOjUwJTtiYWNrZ3JvdW5kLWNvbG9yOiM0Y2E4OTk7Y29sb3I6I2ZmZjt6LWluZGV4OjEwfWBdXG59KVxuZXhwb3J0IGNsYXNzIE1lbnVOb3RpZmljYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpXG4gIHJvb3RVcmw6IHN0cmluZztcblxuICBtZW51Tm90aWZpY2F0aW9uOiBhbnk7XG5cbiAgbm90aWZpY2F0aW9uTWVudUxpbmtzOiBhbnkgPSB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1lbnVOb3RpZmljYXRpb25TZXJ2aWNlOiBNZW51Tm90aWZpY2F0aW9uU2VydmljZSwgcHJpdmF0ZSBtZW51U2VydmljZTogTWVudVNlcnZpY2UpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubWVudU5vdGlmaWNhdGlvblNlcnZpY2UubG9hZE5vdGlmaWNhdGlvbih0aGlzLnJvb3RVcmwpLnN1YnNjcmliZSgobm90aWZpY2F0aW9uUmVzdWx0czogYW55KSA9PiB7XG4gICAgICB0aGlzLm1lbnVOb3RpZmljYXRpb24gPSBub3RpZmljYXRpb25SZXN1bHRzO1xuICAgIH0pO1xuXG4gICAgdGhpcy5tZW51U2VydmljZS5nZXRTYW5pdGl6ZWRNZW51cygpLnBpcGUoZmlsdGVyKChyZXN1bHQ6IGFueVtdKSA9PiByZXN1bHQubGVuZ3RoID4gMCkpLlxuICAgICAgc3Vic2NyaWJlKChzYW5pdGl6ZWRNZW51czogYW55KSA9PiB7XG4gICAgICAgIF8uZWFjaChfLmZpbHRlcihzYW5pdGl6ZWRNZW51cyxcbiAgICAgICAgICBtZW51SXRlbSA9PiBtZW51SXRlbS5uYW1lLmluZGV4T2YoJ2ludGVycHJldGF0aW9uJykgIT09IC0xIHx8IG1lbnVJdGVtLm5hbWUuaW5kZXhPZignbWVzc2FnaW5nJykgIT09IC0xKSwgbWVudUl0ZW0gPT4ge1xuICAgICAgICAgIGlmIChtZW51SXRlbS5uYW1lLmluZGV4T2YoJ2ludGVycHJldGF0aW9uJykgIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLm5vdGlmaWNhdGlvbk1lbnVMaW5rc1snaW50ZXJwcmV0YXRpb24nXSA9IG1lbnVJdGVtLmRlZmF1bHRBY3Rpb247XG4gICAgICAgICAgfSBlbHNlIGlmIChtZW51SXRlbS5uYW1lLmluZGV4T2YoJ21lc3NhZ2luZycpICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5ub3RpZmljYXRpb25NZW51TGlua3NbJ21lc3NhZ2UnXSA9IG1lbnVJdGVtLmRlZmF1bHRBY3Rpb247XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICB9XG5cbn1cbiJdfQ==