/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
export class AbbreviatePipe {
    /**
     * @param {?} name
     * @param {?=} args
     * @return {?}
     */
    transform(name, args) {
        const /** @type {?} */ abbreviatedName = [];
        let /** @type {?} */ count = 0;
        if (name) {
            for (let /** @type {?} */ i = 0; i <= name.length - 1; i++) {
                if (i === 0) {
                    abbreviatedName.push(name[i].toUpperCase());
                }
                else {
                    if (name[i] === ' ') {
                        count = i;
                        abbreviatedName.push(name[count + 1].toUpperCase());
                    }
                }
            }
        }
        return abbreviatedName.join('');
    }
}
AbbreviatePipe.decorators = [
    { type: Pipe, args: [{
                name: 'abbreviate'
            },] },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJicmV2aWF0ZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGlhcHBzL25neC1kaGlzMi1tZW51LyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2FiYnJldmlhdGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFLbEQsTUFBTTs7Ozs7O0lBRUosU0FBUyxDQUFDLElBQVksRUFBRSxJQUFVO1FBQ2hDLHVCQUFNLGVBQWUsR0FBVSxFQUFFLENBQUM7UUFDbEMscUJBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDVCxHQUFHLENBQUMsQ0FBQyxxQkFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUMxQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDWixlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2lCQUM3QztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzt3QkFDcEIsS0FBSyxHQUFHLENBQUMsQ0FBQzt3QkFDVixlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztxQkFDckQ7aUJBQ0Y7YUFDRjtTQUNGO1FBRUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDakM7OztZQXRCRixJQUFJLFNBQUM7Z0JBQ0osSUFBSSxFQUFFLFlBQVk7YUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BpcGUsIFBpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdhYmJyZXZpYXRlJ1xufSlcbmV4cG9ydCBjbGFzcyBBYmJyZXZpYXRlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gIHRyYW5zZm9ybShuYW1lOiBzdHJpbmcsIGFyZ3M/OiBhbnkpOiBhbnkge1xuICAgIGNvbnN0IGFiYnJldmlhdGVkTmFtZTogYW55W10gPSBbXTtcbiAgICBsZXQgY291bnQgPSAwO1xuICAgIGlmIChuYW1lKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBuYW1lLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgIGFiYnJldmlhdGVkTmFtZS5wdXNoKG5hbWVbaV0udG9VcHBlckNhc2UoKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKG5hbWVbaV0gPT09ICcgJykge1xuICAgICAgICAgICAgY291bnQgPSBpO1xuICAgICAgICAgICAgYWJicmV2aWF0ZWROYW1lLnB1c2gobmFtZVtjb3VudCArIDFdLnRvVXBwZXJDYXNlKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhYmJyZXZpYXRlZE5hbWUuam9pbignJyk7XG4gIH1cblxufVxuIl19