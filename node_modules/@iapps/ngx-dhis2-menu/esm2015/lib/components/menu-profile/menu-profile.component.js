/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { MenuService } from '../../services/menu.service';
import { PROFILE_MENUS } from '../../constants/profile-menus';
export class MenuProfileComponent {
    /**
     * @param {?} menuService
     */
    constructor(menuService) {
        this.menuService = menuService;
        this.showProfile = false;
        this.rootUrl = this.contextPath = '../../../';
        this.loadingUser = true;
        this.profileMenus = PROFILE_MENUS;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.menuService.getUserInfo(this.rootUrl).subscribe((profile) => {
            if (profile) {
                this.currentUser = {
                    name: profile.displayName,
                    email: profile.email,
                };
            }
            this.loadingUser = false;
        });
    }
    /**
     * @param {?} e
     * @return {?}
     */
    showMenuProfile(e) {
        e.stopPropagation();
        this.showProfile = true;
    }
    /**
     * @param {?=} e
     * @return {?}
     */
    hideMenuProfile(e) {
        if (e) {
            e.stopPropagation();
        }
        this.showProfile = false;
    }
}
MenuProfileComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-menu-profile',
                template: `<div class="menu-profile-container" appClickOutside (clickOutside)="hideMenuProfile()">
    <div class="menu-profile-btn">
        <a class="menu-profile-icon" [style.background-color]="backgroundColor | convertToLighterColor" (mouseenter)="showMenuProfile($event)">
            {{currentUser?.name | abbreviate}}
        </a>
    </div>
    <div class="profile-menu-list-block" *ngIf="showProfile && !loadingUser" (mouseleave)="hideMenuProfile($event)">
        <div class="profile-menus-list">
            <a *ngFor="let profileMenu of profileMenus" [href]="rootUrl + profileMenu.defaultAction" class="profile-menu-btn">
                <div>
                    <img alt="" [src]="contextPath + profileMenu.icon">
                    <div class="profile-menu-name">{{profileMenu?.name}}</div>
                </div>
            </a>
        </div>
        <div class="user-profile-block">
            <div [style.background-color]="backgroundColor | convertToLighterColor" class="user-profile-logo" *ngIf="!loadingUser">{{currentUser?.name | abbreviate}}</div>
            <div class="user-profile-name">
                <span *ngIf="!loadingUser"><b>{{currentUser?.name}}</b></span>
            </div>
            <div><small *ngIf="!loadingUser">{{currentUser?.email}}</small></div>
            <div class="logout-btn-block">
                <a class="logout-btn" [href]="rootUrl + 'dhis-web-commons-security/logout.action'" *ngIf="!loadingUser">
            LOG OUT
          </a>
            </div>
        </div>
    </div>
</div>
`,
                styles: [`.menu-profile-icon{height:34px;width:34px;border-radius:17px;display:flex;justify-content:center;align-items:center;font-size:15px;cursor:pointer;text-decoration:none;color:#eee!important}.menu-profile-btn{margin-right:2rem;margin-top:5px}.profile-menu-list-block{position:absolute;top:42px;max-width:650px;width:100%;min-height:320px;right:10px;z-index:-1000;font-size:14px;text-align:left;list-style:none;background-color:#fff;display:flex;box-shadow:0 0 3px rgba(0,0,0,.3)}.profile-menus-list{width:70%;display:flex;flex-wrap:wrap;overflow:auto;padding:15px;height:300px}.user-profile-block{position:relative;text-align:center;width:30%;height:320px;padding-top:20px;background-color:#f5f5f5}.user-profile-logo{margin:auto;height:60px;width:60px;display:flex;justify-content:center;align-items:center;border-radius:30px;font-size:30px;color:#eee;font-weight:500}.user-profile-name{margin-top:10px}.logout-btn-block{position:absolute;bottom:20px;color:#555;padding:5px;width:100%}.logout-btn{display:block;text-decoration:none;text-align:center}.logout-btn:hover{color:#222}.profile-menu-btn{margin:5px;text-decoration:none;height:120px;width:120px;display:flex;justify-content:center;align-items:center;transition:all .2s ease-in-out;padding:5px}.profile-menu-btn:hover{background-color:#f1f1f1;-webkit-transform:scale(1.01);transform:scale(1.01)}.profile-menu-btn img{display:block;margin:auto;height:50px}.profile-menu-name{margin-top:5px;font-size:11px;text-align:center;color:#222}`]
            },] },
];
/** @nocollapse */
MenuProfileComponent.ctorParameters = () => [
    { type: MenuService }
];
MenuProfileComponent.propDecorators = {
    rootUrl: [{ type: Input }],
    contextPath: [{ type: Input }],
    backgroundColor: [{ type: Input }]
};
function MenuProfileComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    MenuProfileComponent.prototype.rootUrl;
    /** @type {?} */
    MenuProfileComponent.prototype.contextPath;
    /** @type {?} */
    MenuProfileComponent.prototype.backgroundColor;
    /** @type {?} */
    MenuProfileComponent.prototype.showProfile;
    /** @type {?} */
    MenuProfileComponent.prototype.currentUser;
    /** @type {?} */
    MenuProfileComponent.prototype.loadingUser;
    /** @type {?} */
    MenuProfileComponent.prototype.profileMenus;
    /** @type {?} */
    MenuProfileComponent.prototype.menuService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1wcm9maWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpYXBwcy9uZ3gtZGhpczItbWVudS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL21lbnUtcHJvZmlsZS9tZW51LXByb2ZpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBb0M5RCxNQUFNOzs7O0lBY0osWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDMUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUM5QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLGFBQWEsQ0FBQztLQUNuQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBWSxFQUFFLEVBQUU7WUFDcEUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDWixJQUFJLENBQUMsV0FBVyxHQUFHO29CQUNqQixJQUFJLEVBQUUsT0FBTyxDQUFDLFdBQVc7b0JBQ3pCLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSztpQkFDckIsQ0FBQzthQUNIO1lBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDMUIsQ0FBQyxDQUFDO0tBQ0o7Ozs7O0lBRUQsZUFBZSxDQUFDLENBQUM7UUFDZixDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7S0FDekI7Ozs7O0lBRUQsZUFBZSxDQUFDLENBQUU7UUFDaEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNOLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUNyQjtRQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0tBQzFCOzs7WUE5RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0E2Qlg7Z0JBQ0MsTUFBTSxFQUFFLENBQUMsazlDQUFrOUMsQ0FBQzthQUM3OUM7Ozs7WUFwQ1EsV0FBVzs7O3NCQXNDakIsS0FBSzswQkFHTCxLQUFLOzhCQUdMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lbnVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWVudS5zZXJ2aWNlJztcbmltcG9ydCB7IFBST0ZJTEVfTUVOVVMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvcHJvZmlsZS1tZW51cyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1tZW51LXByb2ZpbGUnLFxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJtZW51LXByb2ZpbGUtY29udGFpbmVyXCIgYXBwQ2xpY2tPdXRzaWRlIChjbGlja091dHNpZGUpPVwiaGlkZU1lbnVQcm9maWxlKClcIj5cbiAgICA8ZGl2IGNsYXNzPVwibWVudS1wcm9maWxlLWJ0blwiPlxuICAgICAgICA8YSBjbGFzcz1cIm1lbnUtcHJvZmlsZS1pY29uXCIgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwiYmFja2dyb3VuZENvbG9yIHwgY29udmVydFRvTGlnaHRlckNvbG9yXCIgKG1vdXNlZW50ZXIpPVwic2hvd01lbnVQcm9maWxlKCRldmVudClcIj5cbiAgICAgICAgICAgIHt7Y3VycmVudFVzZXI/Lm5hbWUgfCBhYmJyZXZpYXRlfX1cbiAgICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJwcm9maWxlLW1lbnUtbGlzdC1ibG9ja1wiICpuZ0lmPVwic2hvd1Byb2ZpbGUgJiYgIWxvYWRpbmdVc2VyXCIgKG1vdXNlbGVhdmUpPVwiaGlkZU1lbnVQcm9maWxlKCRldmVudClcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInByb2ZpbGUtbWVudXMtbGlzdFwiPlxuICAgICAgICAgICAgPGEgKm5nRm9yPVwibGV0IHByb2ZpbGVNZW51IG9mIHByb2ZpbGVNZW51c1wiIFtocmVmXT1cInJvb3RVcmwgKyBwcm9maWxlTWVudS5kZWZhdWx0QWN0aW9uXCIgY2xhc3M9XCJwcm9maWxlLW1lbnUtYnRuXCI+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9XCJcIiBbc3JjXT1cImNvbnRleHRQYXRoICsgcHJvZmlsZU1lbnUuaWNvblwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZmlsZS1tZW51LW5hbWVcIj57e3Byb2ZpbGVNZW51Py5uYW1lfX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLXByb2ZpbGUtYmxvY2tcIj5cbiAgICAgICAgICAgIDxkaXYgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwiYmFja2dyb3VuZENvbG9yIHwgY29udmVydFRvTGlnaHRlckNvbG9yXCIgY2xhc3M9XCJ1c2VyLXByb2ZpbGUtbG9nb1wiICpuZ0lmPVwiIWxvYWRpbmdVc2VyXCI+e3tjdXJyZW50VXNlcj8ubmFtZSB8IGFiYnJldmlhdGV9fTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItcHJvZmlsZS1uYW1lXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCIhbG9hZGluZ1VzZXJcIj48Yj57e2N1cnJlbnRVc2VyPy5uYW1lfX08L2I+PC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2PjxzbWFsbCAqbmdJZj1cIiFsb2FkaW5nVXNlclwiPnt7Y3VycmVudFVzZXI/LmVtYWlsfX08L3NtYWxsPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxvZ291dC1idG4tYmxvY2tcIj5cbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImxvZ291dC1idG5cIiBbaHJlZl09XCJyb290VXJsICsgJ2RoaXMtd2ViLWNvbW1vbnMtc2VjdXJpdHkvbG9nb3V0LmFjdGlvbidcIiAqbmdJZj1cIiFsb2FkaW5nVXNlclwiPlxuICAgICAgICAgICAgTE9HIE9VVFxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYC5tZW51LXByb2ZpbGUtaWNvbntoZWlnaHQ6MzRweDt3aWR0aDozNHB4O2JvcmRlci1yYWRpdXM6MTdweDtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7Zm9udC1zaXplOjE1cHg7Y3Vyc29yOnBvaW50ZXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6I2VlZSFpbXBvcnRhbnR9Lm1lbnUtcHJvZmlsZS1idG57bWFyZ2luLXJpZ2h0OjJyZW07bWFyZ2luLXRvcDo1cHh9LnByb2ZpbGUtbWVudS1saXN0LWJsb2Nre3Bvc2l0aW9uOmFic29sdXRlO3RvcDo0MnB4O21heC13aWR0aDo2NTBweDt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6MzIwcHg7cmlnaHQ6MTBweDt6LWluZGV4Oi0xMDAwO2ZvbnQtc2l6ZToxNHB4O3RleHQtYWxpZ246bGVmdDtsaXN0LXN0eWxlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2Rpc3BsYXk6ZmxleDtib3gtc2hhZG93OjAgMCAzcHggcmdiYSgwLDAsMCwuMyl9LnByb2ZpbGUtbWVudXMtbGlzdHt3aWR0aDo3MCU7ZGlzcGxheTpmbGV4O2ZsZXgtd3JhcDp3cmFwO292ZXJmbG93OmF1dG87cGFkZGluZzoxNXB4O2hlaWdodDozMDBweH0udXNlci1wcm9maWxlLWJsb2Nre3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjMwJTtoZWlnaHQ6MzIwcHg7cGFkZGluZy10b3A6MjBweDtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9LnVzZXItcHJvZmlsZS1sb2dve21hcmdpbjphdXRvO2hlaWdodDo2MHB4O3dpZHRoOjYwcHg7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2JvcmRlci1yYWRpdXM6MzBweDtmb250LXNpemU6MzBweDtjb2xvcjojZWVlO2ZvbnQtd2VpZ2h0OjUwMH0udXNlci1wcm9maWxlLW5hbWV7bWFyZ2luLXRvcDoxMHB4fS5sb2dvdXQtYnRuLWJsb2Nre3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbToyMHB4O2NvbG9yOiM1NTU7cGFkZGluZzo1cHg7d2lkdGg6MTAwJX0ubG9nb3V0LWJ0bntkaXNwbGF5OmJsb2NrO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtYWxpZ246Y2VudGVyfS5sb2dvdXQtYnRuOmhvdmVye2NvbG9yOiMyMjJ9LnByb2ZpbGUtbWVudS1idG57bWFyZ2luOjVweDt0ZXh0LWRlY29yYXRpb246bm9uZTtoZWlnaHQ6MTIwcHg7d2lkdGg6MTIwcHg7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3RyYW5zaXRpb246YWxsIC4ycyBlYXNlLWluLW91dDtwYWRkaW5nOjVweH0ucHJvZmlsZS1tZW51LWJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMWYxZjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wMSk7dHJhbnNmb3JtOnNjYWxlKDEuMDEpfS5wcm9maWxlLW1lbnUtYnRuIGltZ3tkaXNwbGF5OmJsb2NrO21hcmdpbjphdXRvO2hlaWdodDo1MHB4fS5wcm9maWxlLW1lbnUtbmFtZXttYXJnaW4tdG9wOjVweDtmb250LXNpemU6MTFweDt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojMjIyfWBdXG59KVxuZXhwb3J0IGNsYXNzIE1lbnVQcm9maWxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgcm9vdFVybDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGNvbnRleHRQYXRoOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgYmFja2dyb3VuZENvbG9yOiBzdHJpbmc7XG5cbiAgc2hvd1Byb2ZpbGU6IGJvb2xlYW47XG4gIGN1cnJlbnRVc2VyOiBhbnk7XG4gIGxvYWRpbmdVc2VyOiBib29sZWFuO1xuICBwcm9maWxlTWVudXM6IGFueVtdO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1lbnVTZXJ2aWNlOiBNZW51U2VydmljZSkge1xuICAgIHRoaXMuc2hvd1Byb2ZpbGUgPSBmYWxzZTtcbiAgICB0aGlzLnJvb3RVcmwgPSB0aGlzLmNvbnRleHRQYXRoID0gJy4uLy4uLy4uLyc7XG4gICAgdGhpcy5sb2FkaW5nVXNlciA9IHRydWU7XG4gICAgdGhpcy5wcm9maWxlTWVudXMgPSBQUk9GSUxFX01FTlVTO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5tZW51U2VydmljZS5nZXRVc2VySW5mbyh0aGlzLnJvb3RVcmwpLnN1YnNjcmliZSgocHJvZmlsZTogYW55KSA9PiB7XG4gICAgICBpZiAocHJvZmlsZSkge1xuICAgICAgICB0aGlzLmN1cnJlbnRVc2VyID0ge1xuICAgICAgICAgIG5hbWU6IHByb2ZpbGUuZGlzcGxheU5hbWUsXG4gICAgICAgICAgZW1haWw6IHByb2ZpbGUuZW1haWwsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICB0aGlzLmxvYWRpbmdVc2VyID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cblxuICBzaG93TWVudVByb2ZpbGUoZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5zaG93UHJvZmlsZSA9IHRydWU7XG4gIH1cblxuICBoaWRlTWVudVByb2ZpbGUoZT8pIHtcbiAgICBpZiAoZSkge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG5cbiAgICB0aGlzLnNob3dQcm9maWxlID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==