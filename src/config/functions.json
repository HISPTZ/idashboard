{
  "whoMalariafn": {
    "function": "parameters.progress(0);\n//getting all passed variables on function\nconst expressionMapping = parameters.rule.json.expressionMapping;\nconst namesMapping = parameters.rule.json.namesMapping;\nconst expression = parameters.rule.json.expression;\nconst customRuleDefinition = parameters.rule.json.customRuleDefinition;\nconst isCalculationBasedOnRefAndActual =\n  parameters.rule.json.isCalculationBasedOnRefAndActual;\nconst peSelection = parameters.peSelection.items;\nconst {\n  useReferencePeriod,\n  shouldSumResultValue,\n  filters\n} = parameters;\n\n//deduce filter values\nconst isOuInFilters = filters.find(\n  ({\n    dimension\n  }) => dimension === 'ou'\n) ? true : false;\n\nconst isPeInFilters = filters.find(\n  ({\n    dimension\n  }) => dimension === 'pe'\n) ? true : false;\nconst shouldSkipSumOnActualPeriod = peSelection.filter(item => item.ref_type === 'PERIOD_ACTUAL').filter(item => item.skipSummationOnMultiplePeriod).length > 0;\nconst shouldSkipSumOnreferencePeriod = peSelection.filter(item => item.ref_type === 'PERIOD_REF').filter(item => item.skipSummationOnMultiplePeriod).length > 0;\n// get all uids form expression\nconst dataElements = getUidsFromExpression(expression);\n//checking for all de uids has mapper\nconst mappingStatus = getDataElementMappingStatus(\n  dataElements,\n  expressionMapping\n);\nif (mappingStatus.areAllMapped) {\n  parameters.progress(20);\n  //get analytics results\n  const dx = dataElements.join(';');\n  //handling referenc and actual periods\n  if (useReferencePeriod && peSelection.length > 1) {\n    const actualPeriod = peSelection.filter(item => item.ref_type === 'PERIOD_ACTUAL').map(({\n      id\n    }) => id).join(';');\n    const referencePeriod = peSelection.filter(item => item.ref_type === 'PERIOD_REF').map(({\n      id\n    }) => id).join(';');\n    // handling indicators with calculation with reference and actual periods\n    if (actualPeriod && referencePeriod) {\n      if (isCalculationBasedOnRefAndActual) {\n        loadingAndEvaluateCustomExpressionCalculations(\n          actualPeriod,\n          referencePeriod\n        );\n      } else {\n        // handlining inidcator with actual and reference periods\n        loadingAndEvaluateActualAndReferenceIndicator(\n          dx,\n          actualPeriod,\n          referencePeriod\n        );\n      }\n    } else {\n      loadingAndEvaluateAnalyticsData(dx, expression, dataElements);\n    }\n  } else {\n    //handling for only actual period\n    loadingAndEvaluateAnalyticsData(dx, expression, dataElements);\n  }\n} else {\n  // return error message with unmapped de\n  const errorMessage = getMissingDataElementsMappingErrorMessage(\n    mappingStatus.dataElementWithoutMapping,\n    namesMapping\n  );\n  parameters.error(errorMessage);\n}\n\nfunction loadingAndEvaluateCustomExpressionCalculations(\n  actualPeriod,\n  referencePeriod\n) {\n  const json = parameters.rule.json;\n  const {\n    customExpression,\n    expressionMapping,\n    refExpressionKey,\n    actualExpressionKey\n  } = json;\n  const expressionKeyObject = {};\n  const expressionKeys = getUidsFromExpression(customExpression).filter(\n    onlyUniqueItemsOnArray\n  );\n  expressionKeys.map(expressionKey => {\n    let expression = json[expressionKey];\n    if (expression) {\n      const uids = getUidsFromExpression(expression);\n      uids.map(uid => {\n        const newId = expressionMapping[uid];\n        if (newId) {\n          expression = expression.replace(new RegExp(uid, 'g'), newId);\n        }\n      });\n      expressionKeyObject[expressionKey] = expression;\n    }\n  });\n  const analytics = [];\n  let resultAnalytics = {};\n  Object.keys(expressionKeyObject).map(expressionKey => {\n    getAnalyticDataBasedCustomExpressionCalculations(\n        expressionKeyObject[expressionKey],\n        expressionKey,\n        actualExpressionKey,\n        refExpressionKey,\n        actualPeriod,\n        referencePeriod\n      )\n      .then(data => {\n        analytics.push(data);\n        if (analytics.length === Object.keys(expressionKeyObject).length) {\n          for (var i = 0; i < analytics.length; i++) {\n            resultAnalytics = getMergedAnalyticsForActualAndReferencePeriods(\n              analytics[i],\n              resultAnalytics\n            );\n          }\n          const id = (customRuleDefinition && customRuleDefinition.id) ? customRuleDefinition.id : parameters.rule.id;\n          const name = (customRuleDefinition && customRuleDefinition.name) ? customRuleDefinition.name : parameters.rule.name;\n          const customePe = (customRuleDefinition && customRuleDefinition.periodKey) ? customRuleDefinition.periodKey : 'ref_actual_pe';\n          const periods = resultAnalytics.metaData.dimensions.pe;\n          let rows = JSON.stringify(resultAnalytics.rows);\n          periods.map(pe => {\n            rows = rows.replace(new RegExp(pe, 'g'), customePe);\n          });\n          resultAnalytics.metaData.dimensions.pe = [customePe];\n          resultAnalytics.metaData.items[customePe] = {\n            name: (customRuleDefinition && customRuleDefinition.periodName) ? customRuleDefinition.periodName : \"\"\n          };\n          resultAnalytics.rows = JSON.parse(rows);\n          resultAnalytics = getSanitizedAnalytict(resultAnalytics, {\n            rule: {\n              id,\n              name,\n              json: {\n                expression: customExpression\n              }\n            }\n          });\n          parameters.success(getAnalyticValueWithThousandCommaSeparator(resultAnalytics))\n        }\n      })\n      .catch(error => {\n        parameters.error(error);\n      });\n  });\n}\n\nfunction getAnalyticDataBasedCustomExpressionCalculations(\n  expression,\n  expressionKey,\n  actualExpressionKey,\n  refExpressionKey,\n  actualPeriod,\n  referencePeriod\n) {\n  const dataElements = getUidsFromExpression(expression);\n  const dx = dataElements.join(';');\n  let pe = parameters.pe;\n  if (refExpressionKey.indexOf(expressionKey) > -1 && referencePeriod) {\n    pe = referencePeriod;\n  }\n  if (actualExpressionKey.indexOf(expressionKey) > -1 && actualPeriod) {\n    pe = actualPeriod;\n  }\n  const ou = parameters.ou;\n  const url = `../../../api/analytics.json?dimension=dx:${dx}&dimension=pe:${pe}&dimension=ou:${ou}`;\n  return new Promise((resolve, reject) => {\n    if (dataElements.length == 0) {\n      resolve(getEmptyAnalytics());\n    } else {\n      $.ajax({\n        url,\n        type: 'GET',\n        success: function (analytic) {\n          //evaluate expression and and get new analytic object\n          analytic = getSanitizedAnalytict(analytic, {\n            rule: {\n              id: expressionKey,\n              name: '',\n              json: {\n                expression\n              }\n            }\n          })\n          resolve(analytic);\n        },\n        error: function (error) {\n          reject(error);\n        }\n      });\n    }\n  });\n}\n\nfunction loadingAndEvaluateActualAndReferenceIndicator(\n  dx,\n  actualPeriod,\n  referencePeriod\n) {\n  $.ajax({\n    url: `../../../api/analytics.json?dimension=dx:${dx}&dimension=pe:${actualPeriod}&dimension=ou:${\n      parameters.ou\n    }`,\n    type: 'GET',\n    success: function (analyticsResultsForActual) {\n      $.ajax({\n        url: `../../../api/analytics.json?dimension=dx:${dx}&dimension=pe:${referencePeriod}&dimension=ou:${\n          parameters.ou\n        }`,\n        type: 'GET',\n        success: function (analyticsResultsForReference) {\n          //evaluate expression and and get new analytic object\n          analyticsResultsForActual = getSanitizedAnalytict(\n            analyticsResultsForActual,\n            parameters\n          );\n          analyticsResultsForReference = getSanitizedAnalytict(\n            analyticsResultsForReference,\n            parameters\n          );\n          const resultAnalytics = getMergedAnalyticsForActualAndReferencePeriods(\n            analyticsResultsForReference,\n            analyticsResultsForActual\n          )\n          parameters.success(getAnalyticValueWithThousandCommaSeparator(resultAnalytics))\n        },\n        error: function (error) {\n          parameters.error(error);\n        }\n      });\n    },\n    error: function (error) {\n      parameters.error(error);\n    }\n  });\n}\n\nfunction getMergedAnalyticsForActualAndReferencePeriods(\n  analyticsResultsForReference,\n  analyticsResultsForActual\n) {\n  analyticsResultsForReference = getSanitizedAnalytictForMultiplePeriods(\n    analyticsResultsForReference, shouldSkipSumOnreferencePeriod\n  );\n  if (analyticsResultsForActual && analyticsResultsForActual.metaData) {\n    analyticsResultsForActual = getSanitizedAnalytictForMultiplePeriods(\n      analyticsResultsForActual, shouldSkipSumOnActualPeriod\n    );\n    shouldStartWithActual = peSelection.findIndex(({\n      ref_type\n    }) => ref_type === 'PERIOD_REF') > 0;\n    const actualPes = analyticsResultsForActual.metaData.dimensions.pe;\n    const refPes = analyticsResultsForReference.metaData.dimensions.pe;\n    const mergedPe = [];\n    if (shouldStartWithActual) {\n      actualPes.map(pe => {\n        mergedPe.push(pe)\n      })\n      refPes.map(pe => {\n        mergedPe.push(pe)\n      })\n    } else {\n      refPes.map(pe => {\n        mergedPe.push(pe)\n      })\n      actualPes.map(pe => {\n        mergedPe.push(pe)\n      })\n    }\n    analyticsResultsForReference.metaData.dimensions.ou = analyticsResultsForReference.metaData.dimensions.ou\n      .concat(analyticsResultsForActual.metaData.dimensions.ou)\n      .filter(onlyUniqueItemsOnArray);\n    analyticsResultsForReference.metaData.dimensions.pe = mergedPe.filter(onlyUniqueItemsOnArray);\n    analyticsResultsForReference.metaData.dimensions.dx = analyticsResultsForReference.metaData.dimensions.dx\n      .concat(analyticsResultsForActual.metaData.dimensions.dx)\n      .filter(onlyUniqueItemsOnArray);\n    const items = analyticsResultsForActual.metaData.items;\n    Object.keys(items).map(key => {\n      analyticsResultsForReference.metaData.items[key] = items[key];\n    });\n    analyticsResultsForReference.rows = analyticsResultsForReference.rows.concat(\n      analyticsResultsForActual.rows\n    );\n  }\n  return analyticsResultsForReference;\n}\n\nfunction getSanitizedAnalytictForMultiplePeriods(analytics, skipSummationOnMultiplePeriod) {\n  const periods = analytics.metaData.dimensions.pe;\n  if (periods.length > 1 && !skipSummationOnMultiplePeriod) {\n    const names = {};\n    const items = analytics.metaData.items;\n    Object.keys(items).map(key => {\n      if (items[key] && items[key].name) {\n        names[key] = items[key].name;\n      }\n    });\n    const customPeName = `${names[periods[0]]} - ${\n      names[periods[periods.length - 1]]\n    }`;\n    const customPe = `${periods[0]}_${periods[periods.length - 1]}`;\n    analytics.metaData.dimensions.pe = [customPe];\n    analytics.metaData.items[customPe] = {\n      name: customPeName\n    };\n    const sanitizedRows = getSanitizedRowsByPeAndDx(analytics.rows, customPe);\n    analytics.rows = sanitizedRows;\n  }\n  return analytics;\n}\n\nfunction getSanitizedRowsByPeAndDx(rows, customPe) {\n  const sanitizedRows = [];\n  const sumOffPeAndDxObjet = {};\n  rows.map(row => {\n    if (row.length === 4) {\n      const id = `${row[0]}_${row[2]}`;\n      if (!sumOffPeAndDxObjet[id]) {\n        sumOffPeAndDxObjet[id] = 0;\n      }\n      const value = parseFloat(row[3].replace(new RegExp(\",\", 'g'), \"\"));\n      const sum = sumOffPeAndDxObjet[id] + value;\n      sumOffPeAndDxObjet[id] = sum;\n    }\n  });\n  Object.keys(sumOffPeAndDxObjet).map(idObject => {\n    const ids = idObject.split('_');\n    const value = parseFloat(sumOffPeAndDxObjet[idObject]).toFixed(1);\n    sanitizedRows.push([ids[0], customPe, ids[1], value]);\n  });\n  return sanitizedRows;\n}\n\nfunction onlyUniqueItemsOnArray(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction loadingAndEvaluateAnalyticsData(dx, expression, dataElements) {\n  $.ajax({\n    url: '../../../api/analytics.json?dimension=dx:' +\n      dx +\n      '&dimension=pe:' +\n      parameters.pe +\n      '&dimension=ou:' +\n      parameters.ou,\n    type: 'GET',\n    success: function (analyticsResults) {\n      //evaluate expression and and get new analytic object\n      var analytic = getSanitizedAnalytict(analyticsResults, parameters);\n      if (shouldSumResultValue) {\n        analytic = getSanitizedAnalytictForMultiplePeriods(analytic)\n      }\n      parameters.success(getAnalyticValueWithThousandCommaSeparator(analytic));\n    },\n    error: function (error) {\n      parameters.error(error);\n    }\n  });\n}\n\nfunction getDataElementMappingStatus(dataElements, expressionMapping) {\n  var areAllMapped = true;\n  var dataElementWithoutMapping = [];\n  dataElements.forEach(function (dataElement) {\n    var hasBeenMapped = false;\n    Object.keys(expressionMapping).forEach(function (key) {\n      if (expressionMapping[key] === dataElement) {\n        hasBeenMapped = true;\n      }\n    });\n    if (!hasBeenMapped) {\n      dataElementWithoutMapping = dataElementWithoutMapping.concat(dataElement);\n      areAllMapped = false;\n    }\n  });\n  return {\n    areAllMapped,\n    dataElementWithoutMapping\n  };\n}\n\nfunction getUidsFromExpression(expression) {\n  var uids = [];\n  var matchRegrex = /(\\{.*?\\})/gi;\n  expression.match(matchRegrex).forEach(function (value) {\n    uids = uids.concat(\n      value\n      .replace('{', ':separator:')\n      .replace('}', ':separator:')\n      .split(':separator:')\n      .filter(content => content.length > 0)\n    );\n  });\n  return uids;\n}\n\nfunction getMissingDataElementsMappingErrorMessage(\n  dataElementsIds,\n  namesMapping\n) {\n  var errorMessage = {\n    httpStatus: 'Conflict',\n    httpStatusCode: 409,\n    status: 'ERROR',\n    message: ''\n  };\n  var missingDataElementNames = [];\n  dataElementsIds.forEach(function (id) {\n    if (namesMapping[id]) {\n      missingDataElementNames.push(namesMapping[id]);\n    } else {\n      missingDataElementNames.push(id);\n    }\n  });\n  errorMessage.message +=\n    missingDataElementNames.join(',') + ' have not been mapped';\n  return errorMessage;\n}\n\nfunction getSanitizedAnalytict(analyticsResults, parameters) {\n  var analytics = getEmptyAnalytics();\n  var ous = [];\n  var periods = [];\n  if (\n    analyticsResults &&\n    analyticsResults.metaData &&\n    analyticsResults.metaData.dimensions\n  ) {\n    periods = periods.concat(analyticsResults.metaData.dimensions.pe);\n    ous = ous.concat(analyticsResults.metaData.dimensions.ou);\n    periods.forEach(function (pe) {\n      analytics.metaData.items[pe] = analyticsResults.metaData.items[pe];\n    });\n    ous.forEach(function (ou) {\n      analytics.metaData.items[ou] = analyticsResults.metaData.items[ou];\n    });\n  } else if (\n    analyticsResults &&\n    analyticsResults.metaData &&\n    analyticsResults.metaData.pe\n  ) {\n    periods = periods.concat(analyticsResults.metaData.pe);\n    ous = ous.concat(analyticsResults.metaData.ou);\n    if (analyticsResults.metaData.names) {\n      periods.forEach(function (pe) {\n        analytics.metaData.items[pe] = {\n          name: analyticsResults.metaData.names[pe]\n        };\n      });\n      ous.forEach(function (ou) {\n        analytics.metaData.items[ou] = {\n          name: analyticsResults.metaData.names[ou]\n        };\n      });\n    }\n  }\n  var rule = parameters.rule;\n  analytics.metaData.items[rule.id] = {\n    name: rule.name\n  };\n  analytics.metaData.dimensions.dx = analytics.metaData.dimensions.dx\n    .concat(rule.id)\n    .filter(onlyUniqueItemsOnArray);\n  analytics.metaData.dimensions.pe = analytics.metaData.dimensions.pe\n    .concat(periods)\n    .filter(onlyUniqueItemsOnArray);\n  analytics.metaData.dimensions.ou = analytics.metaData.dimensions.ou\n    .concat(ous)\n    .filter(onlyUniqueItemsOnArray);\n  if (ous.length > 0 && periods.length > 0) {\n    // get key value pair\n    ous.map(function (ou) {\n      periods.map(function (pe) {\n        var keyValuePair = getDataElementValuePair(\n          ou,\n          pe,\n          analyticsResults.rows\n        );\n        //get evaulated values of rule\n        var evaluatedValue = getEvaluatedValueOfRule(\n          rule.json.expression,\n          keyValuePair\n        );\n        //adding values on row\n        analytics.rows.push([rule.id, pe, ou, evaluatedValue]);\n      });\n    });\n  }\n  analytics = getAnalyticValueWithThousandCommaSeparator(analytics)\n  analytics.height = analytics.rows.length;\n  return analytics;\n}\n\nfunction getDataElementValuePair(ou, pe, rows) {\n  var keyValuePair = {};\n  rows.forEach(function (row) {\n    var key = row[0];\n    if (!keyValuePair[key]) {\n      keyValuePair[key] = 0;\n    }\n    if (row.length === 4) {\n      var rowPe = row[1];\n      var rowOu = row[2];\n      var value = row[3].replace(new RegExp(\",\", 'g'), \"\")\n      if (rowPe === pe && rowOu === ou) {\n        var oldValue = parseInt(keyValuePair[key], 10);\n        var newValue = oldValue + parseInt(value, 10);\n        keyValuePair[key] = newValue.toFixed(1);\n      }\n    }\n  });\n  return keyValuePair;\n}\n\nfunction getEvaluatedValueOfRule(expression, keyValuePair) {\n  var evaluatedValue = 0;\n  var formulaPattern = /#\\{.+?\\}/g;\n  var matcher = expression.match(formulaPattern);\n  matcher.forEach(function (match) {\n    var operand = match.replace(/[#\\{\\}]/g, '');\n    if (keyValuePair[operand]) {\n      expression = expression.replace(\n        match,\n        parseInt(keyValuePair[operand], 10)\n      );\n    }\n    try {\n      if (!isNaN(eval(expression))) {\n        evaluatedValue = eval(expression);\n      }\n    } catch (e) {}\n  });\n  return evaluatedValue.toFixed(1);\n}\n\nfunction getAnalyticValueWithThousandCommaSeparator(analytic) {\n  if (analytic && analytic.rows) {\n    const customPe = \"customPe\"\n    const customOu = \"customOu\"\n    if (isOuInFilters) {\n      const rows = getRowsByOuAsFilter(analytic.rows, customOu)\n      analytic.metaData.items[customOu] = {\n        name: \"\"\n      }\n      analytic.metaData.dimensions.ou = [customOu]\n      analytic.rows = rows;\n    }\n    if (isPeInFilters) {\n      const rows = getRowsByPeAsFilter(analytic.rows, customPe);\n      analytic.metaData.items[customPe] = {\n        name: \"\"\n      };\n      analytic.metaData.dimensions.pe = [customPe];\n      analytic.rows = rows;\n    }\n    for (var row of analytic.rows) {\n      var value = row[row.length - 1].replace(new RegExp(\",\", 'g'), \"\");\n      value = parseFloat(value).toLocaleString();\n      row[row.length - 1] = value;\n    }\n  }\n  return analytic;\n}\n\nfunction getRowsByOuAsFilter(rows, customOu) {\n  const sanitizedRows = [];\n  const sumObjet = {};\n  rows.map(row => {\n    if (row.length === 4) {\n      const id = `${row[0]}__${row[1]}`;\n      if (!sumObjet[id]) {\n        sumObjet[id] = 0;\n      }\n      sumObjet[id] += parseFloat(row[3].replace(new RegExp(\",\", 'g'), \"\"));\n    }\n  });\n  Object.keys(sumObjet).map(idObject => {\n    const ids = idObject.split('__');\n    const value = parseFloat(sumObjet[idObject]).toFixed(1);\n    sanitizedRows.push([ids[0], ids[1], customOu, value]);\n  });\n  return sanitizedRows;\n}\n\nfunction getRowsByPeAsFilter(rows, customPe) {\n  const sanitizedRows = [];\n  const sumObjet = {};\n  rows.map(row => {\n    if (row.length === 4) {\n      const id = `${row[0]}_${row[2]}`;\n      if (!sumObjet[id]) {\n        sumObjet[id] = 0;\n      }\n      sumObjet[id] += parseFloat(row[3].replace(new RegExp(\",\", 'g'), \"\"));\n    }\n  });\n  Object.keys(sumObjet).map(idObject => {\n    const ids = idObject.split('_');\n    const value = parseFloat(sumObjet[idObject]).toFixed(1);\n    sanitizedRows.push([ids[0], customPe, ids[1], value]);\n  });\n  return sanitizedRows;\n}\n\nfunction getEmptyAnalytics() {\n  return {\n    headers: [{\n        name: 'dx',\n        column: 'Data',\n        valueType: 'TEXT',\n        type: 'java.lang.String',\n        hidden: false,\n        meta: true\n      },\n      {\n        name: 'pe',\n        column: 'Period',\n        valueType: 'TEXT',\n        type: 'java.lang.String',\n        hidden: false,\n        meta: true\n      },\n      {\n        name: 'ou',\n        column: 'Organisation unit',\n        valueType: 'TEXT',\n        type: 'java.lang.String',\n        hidden: false,\n        meta: true\n      },\n      {\n        name: 'value',\n        column: 'Value',\n        valueType: 'NUMBER',\n        type: 'java.lang.Double',\n        hidden: false,\n        meta: false\n      }\n    ],\n    metaData: {\n      items: {\n        dx: {\n          name: 'Data'\n        },\n        pe: {\n          name: 'Period'\n        },\n        ou: {\n          name: 'Organisation unit'\n        }\n      },\n      dimensions: {\n        dx: [],\n        pe: [],\n        ou: [],\n        co: []\n      }\n    },\n    rows: [],\n    width: 4,\n    height: 0\n  };\n}\n",
    "rules": [{
        "id": "aS1r6wwtLb4",
        "name": "Net Gap % in current year",
        "description": "",
        "json": "{\"expression\":\"(100*(((#{PQA10xCuDqo})-(#{PAbp5CFUJEP}+#{bMshElFlkIT}))/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"expressionMapping\":{\"PQA10xCuDqo\":null,\"bMshElFlkIT\":null,\"PAbp5CFUJEP\":null},\"namesMapping\":{\"PQA10xCuDqo\":\"Total Needs\",\"bMshElFlkIT\":\"External Funding\",\"PAbp5CFUJEP\":\"Domestic Funding\"},\"actualExpressionDx\":\"(100*(((#{PQA10xCuDqo})-(#{PAbp5CFUJEP}+#{bMshElFlkIT}))/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"isCalculationBasedOnRefAndActual\":true,\"customRuleDefinition\":{\"id\":\"UnUlBgLykAj\",\"name\":\"Net Gap\",\"periodName\":\"% in Current Year\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(#{actualExpressionDx})\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[]}"
      },
      {
        "id": "Mc9igiMHZrP",
        "name": "Domestic Funding % in current year",
        "json": "{\"expression\":\"(100 *((#{PAbp5CFUJEP})/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"expressionMapping\":{\"PQA10xCuDqo\":null,\"bMshElFlkIT\":null,\"PAbp5CFUJEP\":null},\"namesMapping\":{\"bMshElFlkIT\":\"External Funding\",\"PAbp5CFUJEP\":\"Domestic Funding\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(100 *((#{PAbp5CFUJEP})/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"customRuleDefinition\":{\"id\":\"PAbp5CFUJEP\",\"name\":\"Domestic Funding\",\"periodName\":\"% in Current Year\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(#{actualExpressionDx})\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[]}"
      },
      {
        "id": "ANfjRNaQvR7",
        "name": "External Funding % in current year",
        "json": "{\"expression\":\"(100* ((#{bMshElFlkIT})/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"expressionMapping\":{\"PQA10xCuDqo\":null,\"bMshElFlkIT\":null,\"PAbp5CFUJEP\":null},\"namesMapping\":{\"bMshElFlkIT\":\"External Funding\",\"PAbp5CFUJEP\":\"Domestic Funding\"},\"actualExpressionDx\":\"(100* ((#{bMshElFlkIT})/(#{PAbp5CFUJEP}+#{bMshElFlkIT})))\",\"isCalculationBasedOnRefAndActual\":true,\"customRuleDefinition\":{\"id\":\"bMshElFlkIT\",\"name\":\"External Funding\",\"periodName\":\"% in Current Year\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(#{actualExpressionDx})\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[]}"
      },
      {
        "id": "UnUlBgLykAj",
        "name": "Net Gap",
        "description": "",
        "json": "{\"expression\":\"((((#{PQA10xCuDqo})-(#{PAbp5CFUJEP}+#{bMshElFlkIT}))/(1))*1)\",\"expressionMapping\":{\"PQA10xCuDqo\":null,\"bMshElFlkIT\":null,\"PAbp5CFUJEP\":null},\"namesMapping\":{\"PQA10xCuDqo\":\"Total Needs\",\"bMshElFlkIT\":\"External Funding\",\"PAbp5CFUJEP\":\"Domestic Funding\"}}"
      }, {
        "id": "PQA10xCuDqo",
        "name": "Total Needs",
        "description": "",
        "json": "{\"expression\":\"(((#{PQA10xCuDqo})/(1))*1)\",\"expressionMapping\":{\"PQA10xCuDqo\":null},\"namesMapping\":{\"PQA10xCuDqo\":\"Total Needs\"}}"
      },
      {
        "id": "j470ZcksHc2",
        "name": "Global Fund",
        "description": "",
        "json": "{\"expression\":\"(((#{j470ZcksHc2})/(1))*1)\",\"expressionMapping\":{\"j470ZcksHc2\":null},\"namesMapping\":{\"j470ZcksHc2\":\"Global Fund\"}}"
      }, {
        "id": "ifhhKPHYssI",
        "name": "PMI/ USAID",
        "description": "",
        "json": "{\"expression\":\"(((#{ifhhKPHYssI})/(1))*1)\",\"expressionMapping\":{\"ifhhKPHYssI\":null},\"namesMapping\":{\"ifhhKPHYssI\":\"PMI/ USAID\"}}"
      }, {
        "id": "sx6VVUpEY1r",
        "name": "Others",
        "description": "",
        "json": "{\"expression\":\"(((#{sx6VVUpEY1r})/(1))*1)\",\"expressionMapping\":{\"sx6VVUpEY1r\":null},\"namesMapping\":{\"sx6VVUpEY1r\":\"Others\"}}"
      }, {
        "id": "YDqD4CuPJGq",
        "name": "Annual parasite incidence (API) - % change",
        "description": "",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ} + #{vTRrNdOOT9g}) + (#{cE8SDxizo5s} - (#{DPNsg3wjxGm} + #{pmRn0GsUfr6})) * (100 * (#{enVf9I39FRZ} / #{DPNsg3wjxGm})) ) * 1000)/(#{cOVhTyW8zN6} * #{lz1FE0wvo1m}))*1)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null,\"cE8SDxizo5s\":null,\"DPNsg3wjxGm\":null,\"pmRn0GsUfr6\":null,\"cOVhTyW8zN6\":null,\"lz1FE0wvo1m\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\",\"cE8SDxizo5s\":\"Number of suspected malaria cases\",\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\",\"cOVhTyW8zN6\":\"Population at risk\",\"lz1FE0wvo1m\":\"Number of active foci \"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((((#{enVf9I39FRZ} + #{vTRrNdOOT9g}) + (#{cE8SDxizo5s} - (#{DPNsg3wjxGm} + #{pmRn0GsUfr6})) * (100 * (#{enVf9I39FRZ} / #{DPNsg3wjxGm})) ) * 1000)/(#{cOVhTyW8zN6} * #{lz1FE0wvo1m}))*1)\",\"refExpressionDx\":\"(((((#{enVf9I39FRZ} + #{vTRrNdOOT9g}) + (#{cE8SDxizo5s} - (#{DPNsg3wjxGm} + #{pmRn0GsUfr6})) * (100 * (#{enVf9I39FRZ} / #{DPNsg3wjxGm})) ) * 1000)/(#{cOVhTyW8zN6} * #{lz1FE0wvo1m}))*1)\",\"customRuleDefinition\":{\"id\":\"SEi6VEB5DO0\",\"name\":\"Annual parasite incidence (API)\",\"periodName\":\"% Change\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "rmu9kA4Ti2U",
        "name": "Test positivity rate(TPR) - % change",
        "description": "",
        "json": "{\"expression\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"expressionMapping\":{\"vTRrNdOOT9g\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"refExpressionDx\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"customRuleDefinition\":{\"id\":\"IPI8Xmc1nnT\",\"name\":\"Test positivity rate(TPR)\",\"periodName\":\"% Change\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "cPucRw8LCZT",
        "name": "Number of inpatient malaria cases - % change",
        "description": "",
        "json": "{\"expression\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"expressionMapping\":{\"v0WZQQ6gKAX\":null},\"namesMapping\":{\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"refExpressionDx\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"customRuleDefinition\":{\"id\":\"v0WZQQ6gKAX\",\"name\":\"Number of inpatient malaria cases\",\"periodName\":\"% Change\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "TcyzseQs9rK",
        "name": "Number of malaria deaths - % change",
        "description": "",
        "json": "{\"expression\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"expressionMapping\":{\"GxlrIgMyEf4\":null},\"namesMapping\":{\"GxlrIgMyEf4\":\"Number of malaria deaths\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"refExpressionDx\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"customRuleDefinition\":{\"id\":\"GxlrIgMyEf4\",\"name\":\"Number of malaria deaths\",\"periodName\":\"% Change\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "jx3YNvNxSIq",
        "name": "Confirmed cases - % change",
        "description": "",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"refExpressionDx\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"customRuleDefinition\":{\"id\":\"gTPP0wYkXBA\",\"name\":\"Confirmed cases\",\"periodName\":\"% Change\",\"periodKey\":\"change_current_year\"},\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      }, {
        "id": "VD4CKS8uRsA",
        "name": "Confirmed cases decline(%)",
        "description": "",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"refExpressionDx\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "d6FUocDoKFP",
        "name": "Total cases decline (%)",
        "description": "",
        "json": "{\"expression\":\"(#{enVf9I39FRZ} + #{vTRrNdOOT9g})\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(#{enVf9I39FRZ} + #{vTRrNdOOT9g})\",\"refExpressionDx\":\"(#{enVf9I39FRZ} + #{vTRrNdOOT9g})\",\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "ufvoNFHpEyQ",
        "name": "TPR decline (%)",
        "description": "",
        "json": "{\"expression\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"expressionMapping\":{\"vTRrNdOOT9g\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"refExpressionDx\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "opjQGRn9KXM",
        "name": "Inpatient case decline (%)",
        "description": "",
        "json": "{\"expression\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"expressionMapping\":{\"v0WZQQ6gKAX\":null},\"namesMapping\":{\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"refExpressionDx\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "CfvHk9Kk1da",
        "name": "Deaths decline(%)",
        "description": "",
        "json": "{\"expression\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"expressionMapping\":{\"GxlrIgMyEf4\":null},\"namesMapping\":{\"GxlrIgMyEf4\":\"Number of malaria deaths\"},\"isCalculationBasedOnRefAndActual\":true,\"actualExpressionDx\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"refExpressionDx\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"customExpression\":\"(-100 * ((#{refExpressionDx} - #{actualExpressionDx} )/(#{refExpressionDx})))\",\"actualExpressionKey\":[\"actualExpressionDx\"],\"refExpressionKey\":[\"refExpressionDx\"]}"
      },
      {
        "id": "GLqY4EV4iOG",
        "name": "No. of Health facilities reports expected (OPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{GLqY4EV4iOG})/(1))*1)\",\"expressionMapping\":{\"GLqY4EV4iOG\":null},\"namesMapping\":{\"GLqY4EV4iOG\":\"No. of Health facilities reports expected (OPD)\"}}"
      },
      {
        "id": "Gg0z2s1QM3F",
        "name": "No. of Health facilities reports received (OPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{Gg0z2s1QM3F})/(1))*1)\",\"expressionMapping\":{\"Gg0z2s1QM3F\":null},\"namesMapping\":{\"Gg0z2s1QM3F\":\"No. of Health facilities reports received (OPD)\"}}"
      },
      {
        "id": "xTsHkGqsUlW",
        "name": "% completeness(OPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{Gg0z2s1QM3F})/(#{GLqY4EV4iOG}))*100)\",\"expressionMapping\":{\"Gg0z2s1QM3F\":null,\"GLqY4EV4iOG\":null},\"namesMapping\":{\"GLqY4EV4iOG\":\"No. of Health facilities reports expected (OPD)\",\"Gg0z2s1QM3F\":\"No. of Health facilities reports received (OPD)\"}}"
      },
      {
        "id": "oPu5OSqr6p9",
        "name": "No. of Health facilities reports expected (IPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{oPu5OSqr6p9})/(1))*1)\",\"expressionMapping\":{\"oPu5OSqr6p9\":null},\"namesMapping\":{\"oPu5OSqr6p9\":\"No. of Health facilities reports expected (IPD)\"}}"
      },
      {
        "id": "WLKT9cTihxj",
        "name": "No. of Health facilities reports received (IPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{WLKT9cTihxj})/(1))*1)\",\"expressionMapping\":{\"WLKT9cTihxj\":null},\"namesMapping\":{\"WLKT9cTihxj\":\"No. of Health facilities reports received (IPD)\"}}"
      },
      {
        "id": "VaxcbRkQbZA",
        "name": "% completeness(IPD)",
        "description": "",
        "json": "{\"expression\":\"(((#{WLKT9cTihxj})/(#{oPu5OSqr6p9}))*100)\",\"expressionMapping\":{\"WLKT9cTihxj\":null,\"oPu5OSqr6p9\":null},\"namesMapping\":{\"oPu5OSqr6p9\":\"No. of Health facilities reports expected (IPD)\",\"WLKT9cTihxj\":\"No. of Health facilities reports received (IPD)\"}}"
      },
      {
        "id": "HFWOXsnDJo7",
        "name": "% of cases potentially treated with ACTs",
        "description": "Number of full ACT treatment courses distributed divided by total number of P. falciparum cases multiplied by 100",
        "json": "{\"expression\":\"(((#{OCuA0tI3BCi})/(#{jvjJ901K56K} + #{lgDGha7OO9o} + #{llpG8qA0SvG}))*1)\",\"expressionMapping\":{\"OCuA0tI3BCi\":null,\"jvjJ901K56K\":null,\"lgDGha7OO9o\":null,\"llpG8qA0SvG\":null},\"namesMapping\":{\"OCuA0tI3BCi\":\"Number of 1st-line treatment courses received (inlc. ACTs)\",\"jvjJ901K56K\":\"Number of plasmodium falciparum (microscopy)\",\"lgDGha7OO9o\":\"Number of malaria mixed infection (microscopy)\",\"llpG8qA0SvG\":\"Number of mixed/Other malaria species (RDT)\"}}"
      },
      {
        "id": "iaQuylCoH3u",
        "name": "Number of RDTs received",
        "description": "",
        "json": "{\"expression\":\"(((#{iaQuylCoH3u})/(1))*1)\",\"expressionMapping\":{\"iaQuylCoH3u\":null},\"namesMapping\":{\"iaQuylCoH3u\":\"Number of RDTs received\"}}"
      },
      {
        "id": "HHpmA3PRXlJ",
        "name": "Prop. of cases investigated within 4 timeframe",
        "description": "",
        "json": "{\"expression\":\"(((#{HHpmA3PRXlJ})/(1))*1)\",\"expressionMapping\":{\"HHpmA3PRXlJ\":null},\"namesMapping\":{\"HHpmA3PRXlJ\":\"Number of malaria cases investigated within (N2)* timeframe of the guideline\"}}"
      },
      {
        "id": "IS9VxwhkJXR",
        "name": "proportion of foci with response with timeframe",
        "description": "",
        "json": "{\"expression\":\"(((#{jKGVvTehpps})/(#{lZi1cjtvVB6}))*100\",\"expressionMapping\":{\"jKGVvTehpps\":null,\"lZi1cjtvVB6\":null},\"namesMapping\":{\"jKGVvTehpps\":\"Number of malaria foci with response within (N4)* timeframe of the guideline\",\"lZi1cjtvVB6\":\"Number of new foci indentified\"}}"
      },
      {
        "id": "kC0lyoKVBqC",
        "name": "No. Of foci",
        "json": "{\"expression\":\"(((#{kC0lyoKVBqC})/(1))*1)\",\"expressionMapping\":{\"kC0lyoKVBqC\":\"\"},\"namesMapping\":{\"kC0lyoKVBqC\":\"No. Of foci \"}}"
      },
      {
        "id": "OCN59f0jJbk",
        "name": "Foci investigated",
        "description": "Number of foci investigated divided by total number of foci in the registry multipled by 100 (in ayear)",
        "json": "{\"expression\":\"(((#{EHbjdbiKtd8})/(#{lZi1cjtvVB6}))*100)\",\"expressionMapping\":{\"EHbjdbiKtd8\":null,\"lZi1cjtvVB6\":null},\"namesMapping\":{\"EHbjdbiKtd8\":\"Number of malaria foci classified\",\"lZi1cjtvVB6\":\"Number of new foci indentified\"}}"
      },
      {
        "id": "nrJvyLYwsHA",
        "name": "Foci classified",
        "description": "Number of foci investigated and classified divided by total number of foci in the registry multipled by 100 (in ayear)",
        "json": "{\"expression\":\"(((#{EHbjdbiKtd8})/(#{lZi1cjtvVB6}))*100)\",\"expressionMapping\":{\"EHbjdbiKtd8\":null,\"lZi1cjtvVB6\":null},\"namesMapping\":{\"EHbjdbiKtd8\":\"Number of malaria foci classified\",\"lZi1cjtvVB6\":\"Number of new foci indentified\"}}"
      },
      {
        "id": "v0WZQQ6gKAX",
        "name": "Number of inpatient malaria cases",
        "json": "{\"expression\":\"(((#{v0WZQQ6gKAX})/(1))*1)\",\"expressionMapping\":{\"v0WZQQ6gKAX\":null},\"namesMapping\":{\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\"}}"
      },
      {
        "id": "IPI8Xmc1nnT",
        "name": "Test positivity rate(TPR)",
        "description": "Number of malaria RDT positive cases divided by total RDT tests multiplied by 100",
        "json": "{\"expression\":\"(((#{vTRrNdOOT9g})/(#{pmRn0GsUfr6}))*100)\",\"expressionMapping\":{\"vTRrNdOOT9g\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"}}"

      },
      {
        "id": "FDgw48IMC7A",
        "name": "Non-malaria inpatient cases",
        "description": "All inpatient cases except malaria (all-cause admissions minus malaria admissions)",
        "json": "{\"expression\":\"((((#{BjDrgVrkBI3}) - (#{v0WZQQ6gKAX}))/(1))*1)\",\"expressionMapping\":{\"BjDrgVrkBI3\":null,\"v0WZQQ6gKAX\":null},\"namesMapping\":{\"BjDrgVrkBI3\":\"Number of all-cause inpatient\",\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\"}}"
      },
      {
        "id": "c9o7AH6loTf",
        "name": "Cases classified",
        "description": "Number of positive cases investigated and classified divided by total number of cases investigated multiplied by 100 ",
        "json": "{\"expression\":\"(((((#{a4Cw4iPcMrY})))/(((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g}))))*100)\",\"expressionMapping\":{\"a4Cw4iPcMrY\":null,\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"a4Cw4iPcMrY\":\"Number of malaria cases classified\",\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "MljjlLCWohp",
        "name": "Proportion of local cases",
        "description": "Number of cases classified as either indigineous or introduced divided by total number of cases classified mutiplied by 100",
        "json": "{\"expression\":\"(((((#{HMUc4RajgaC})))/(((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g}))))*100)\",\"expressionMapping\":{\"HMUc4RajgaC\":null,\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"HMUc4RajgaC\":\"Number of malaria cases classified as local\",\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "ySyleCjszMH",
        "name": "Proportion of outpatient malaria cases",
        "description": "Malaria as a proportion of all-cause outpatient consultations",
        "json": "{\"expression\":\"((((#{kRasaq1REFp}))/((#{VL73cqNHxBJ})))*1)\",\"expressionMapping\":{\"kRasaq1REFp\":null,\"VL73cqNHxBJ\":null},\"namesMapping\":{\"kRasaq1REFp\":\"Incidence\",\"VL73cqNHxBJ\":\"Number of all-cause outpatient cases\"}}"
      },
      {
        "id": "UROz5lfu4ab",
        "name": "Proportion of inpatient malaria",
        "description": "Malaria as a proportion of all-cause inpatient cases (admissions or hospitalizations)",
        "json": "{\"expression\":\"((((#{v0WZQQ6gKAX}))/((#{BjDrgVrkBI3})))*1)\",\"expressionMapping\":{\"v0WZQQ6gKAX\":null,\"BjDrgVrkBI3\":null},\"namesMapping\":{\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\",\"BjDrgVrkBI3\":\"Number of all-cause inpatient\"}}"
      },
      {
        "id": "ploh4JSyBCf",
        "name": "Proportion of malaria deaths",
        "description": "Malaria as a proportion of all-cause deaths ",
        "json": "{\"expression\":\"((((#{GxlrIgMyEf4}))/((#{SXGjaEobp6V})))*1)\",\"expressionMapping\":{\"GxlrIgMyEf4\":null,\"SXGjaEobp6V\":null},\"namesMapping\":{\"GxlrIgMyEf4\":\"Number of malaria deaths\",\"SXGjaEobp6V\":\"Number of all-cause death\"}}"
      },
      {
        "id": "DPNsg3wjxGm",
        "name": "Number of malaria cases tested with microscopy ",
        "json": "{\"expression\":\"(((#{DPNsg3wjxGm})/(1))*1)\",\"expressionMapping\":{\"DPNsg3wjxGm\":null},\"namesMapping\":{\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \"}}"
      },
      {
        "id": "pmRn0GsUfr6",
        "name": "Number of malaria cases tested with RDT",
        "json": "{\"expression\":\"(((#{pmRn0GsUfr6})/(1))*1)\",\"expressionMapping\":{\"pmRn0GsUfr6\":null},\"namesMapping\":{\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"}}"
      },
      {
        "id": "Te6QHrjYc8k",
        "name": "Slide positivity rate (microscopy)",
        "description": "Number of malaria microscopy positive cases divided by total microcopy tests multiplied by 100",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ})))/(((#{DPNsg3wjxGm}))))*100)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"DPNsg3wjxGm\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \"}}"
      },
      {
        "id": "ZCCrHrs1Ta2",
        "name": "Proportion of population at risk",
        "description": "Popuation living in areas where malaria transmission is possible, i.e. population living in either endemic area, active foci, non-active and cleared-up foci",
        "json": "{\"expression\":\"((((#{cOVhTyW8zN6}))/(1))*1)\",\"expressionMapping\":{\"cOVhTyW8zN6\":null},\"namesMapping\":{\"cOVhTyW8zN6\":\"Population at risk\"}}"
      },
      {
        "id": "kC0lyoKVBqC",
        "name": "No. Of foci",
        "json": "{\"expression\":\"(((#{kC0lyoKVBqC})/(1))*1)\",\"expressionMapping\":{\"kC0lyoKVBqC\":null},\"namesMapping\":{\"kC0lyoKVBqC\":\"No. Of foci \"}}"
      },
      {
        "id": "lz1FE0wvo1m",
        "name": "Number of active foci ",
        "json": "{\"expression\":\"(((#{lz1FE0wvo1m})/(1))*1)\",\"expressionMapping\":{\"lz1FE0wvo1m\":null},\"namesMapping\":{\"lz1FE0wvo1m\":\"Number of active foci \"}}"
      },
      {
        "id": "Qzfvt1YRb1Y",
        "name": "Number of residula non-active foci",
        "json": "{\"expression\":\"(((#{Qzfvt1YRb1Y})/(1))*1)\",\"expressionMapping\":{\"Qzfvt1YRb1Y\":null},\"namesMapping\":{\"Qzfvt1YRb1Y\":\"Number of residula non-active foci\"}}"
      },
      {
        "id": "LH9FKWl1FfP",
        "name": "Number of cleared-up foci",
        "json": "{\"expression\":\"(((#{LH9FKWl1FfP})/(1))*1)\",\"expressionMapping\":{\"LH9FKWl1FfP\":null},\"namesMapping\":{\"LH9FKWl1FfP\":\"Number of cleared-up foci\"}}"
      },
      {
        "id": "gTPP0wYkXBA",
        "name": "Confirmed cases",
        "description": "Cases confirmed as positive with microscopy and/or RDT \n",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g})))/(1))*1)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "DYpakDmCvNG",
        "name": "Indigenous cases",
        "json": "{\"expression\":\"(((#{DYpakDmCvNG})/(1))*1)\",\"expressionMapping\":{\"DYpakDmCvNG\":null},\"namesMapping\":{\"DYpakDmCvNG\":\"Indigenous cases\"}}"
      },
      {
        "id": "Ppc51eaCPHb",
        "name": "Number of Malaria cases investigated",
        "json": "{\"expression\":\"(((#{Ppc51eaCPHb})/(1))*1)\",\"expressionMapping\":{\"Ppc51eaCPHb\":null},\"namesMapping\":{\"Ppc51eaCPHb\":\"Number of Malaria cases investigated\"}}"
      },
      {
        "id": "nx6lSAN1YmB",
        "name": "Proportion of cases investigated within N2 days  of diagnosis",
        "description": "Number of confirmed malaria cases investigated within (N2)*,the number of days after confirmation, defined in the national guideline divided by total number of confirmed malaria cases reported through PCD multiplied by 100. ",
        "json": "{\"expression\":\"(((#{HHpmA3PRXlJ})/(((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g}))))*100)\",\"expressionMapping\":{\"HHpmA3PRXlJ\":null,\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"HHpmA3PRXlJ\":\"Number of malaria cases investigated within (N2)* timeframe of the guideline\",\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "EM5cpI2NZ7d",
        "name": "Percentage of P. falciparum",
        "description": "Percentage of positive cases due to P. falciparum (Number of cases due to P. falciparum divided by all positives multiplied by 100)",
        "json": "{\"expression\":\"(((((#{jvjJ901K56K})) + ((#{lgDGha7OO9o}) ) + ((#{IUrl6HtHVQI} )))/(((#{jvjJ901K56K})) + ((#{yHS1RqIFeD7} ) ) + ((#{lgDGha7OO9o})) + ((#{jtyuEfbNbkb} ) ) + ((#{WNcIBqTodHr}) ) + ((#{QJUcVI1zY5y} )) + ((#{IUrl6HtHVQI})) + ((#{yVGY0DGVPor})) + ((#{llpG8qA0SvG})) + ((#{iMcQ1MedqGo}))))*100)\",\"expressionMapping\":{\"jvjJ901K56K\":null,\"lgDGha7OO9o\":null,\"IUrl6HtHVQI\":null,\"yHS1RqIFeD7\":null,\"jtyuEfbNbkb\":null,\"WNcIBqTodHr\":null,\"QJUcVI1zY5y\":null,\"yVGY0DGVPor\":null,\"llpG8qA0SvG\":null,\"iMcQ1MedqGo\":null},\"namesMapping\":{\"jvjJ901K56K\":\"Number of plasmodium falciparum (microscopy) \",\"lgDGha7OO9o\":\"Number of malaria mixed infection (microscopy) \",\"IUrl6HtHVQI\":\"Number of plasmodium falciparum (RDT) \",\"yHS1RqIFeD7\":\"Number of plasmodium vivax (microscopy) \",\"jtyuEfbNbkb\":\"Number of other malaria species (microscopy) \",\"WNcIBqTodHr\":\"Number of plasmodium malariae (microscopy) \",\"QJUcVI1zY5y\":\"Number of plasmodium knowlesi (microscopy) \",\"yVGY0DGVPor\":\"Number of plasmodium vivax (RDT) \",\"llpG8qA0SvG\":\"Number of mixed/Other malaria species (RDT)\",\"iMcQ1MedqGo\":\"Number of plasmodium ovale (microscopy) \"}}"
      },
      {
        "id": "clAcoaqWA5q",
        "name": "Percentage of P. vivax",
        "description": "Percentage of positive cases due to P. vivax (Number of cases due to P. falciparum divided by all positives multiplied by 100)",
        "json": "{\"expression\":\"(((((#{yHS1RqIFeD7})) + ((#{yVGY0DGVPor})))/(((#{jvjJ901K56K})) + ((#{yHS1RqIFeD7})) + ((#{lgDGha7OO9o})) + ((#{jtyuEfbNbkb}) ) + ((#{iMcQ1MedqGo}) + ((#{WNcIBqTodHr})) + ((#{IUrl6HtHVQI})) + ((#{yVGY0DGVPor})) + ((#{llpG8qA0SvG})) + ((#{QJUcVI1zY5y}))))*100)\",\"expressionMapping\":{\"yHS1RqIFeD7\":null,\"yVGY0DGVPor\":null,\"jvjJ901K56K\":null,\"lgDGha7OO9o\":null,\"jtyuEfbNbkb\":null,\"iMcQ1MedqGo\":null,\"WNcIBqTodHr\":null,\"IUrl6HtHVQI\":null,\"llpG8qA0SvG\":null,\"QJUcVI1zY5y\":null},\"namesMapping\":{\"yHS1RqIFeD7\":\"Number of plasmodium vivax (microscopy) \",\"yVGY0DGVPor\":\"Number of plasmodium vivax (RDT) \",\"jvjJ901K56K\":\"Number of plasmodium falciparum (microscopy) \",\"lgDGha7OO9o\":\"Number of malaria mixed infection (microscopy) \",\"jtyuEfbNbkb\":\"Number of other malaria species (microscopy) \",\"iMcQ1MedqGo\":\"Number of plasmodium ovale (microscopy) \",\"WNcIBqTodHr\":\"Number of plasmodium malariae (microscopy) \",\"IUrl6HtHVQI\":\"Number of plasmodium falciparum (RDT) \",\"llpG8qA0SvG\":\"Number of mixed/Other malaria species (RDT)\",\"QJUcVI1zY5y\":\"Number of plasmodium knowlesi (microscopy) \"}}"
      },
      {
        "id": "lZi1cjtvVB6",
        "name": "Number of new foci indentified",
        "json": "{\"expression\":\"(((#{lZi1cjtvVB6})/(1))*1)\",\"expressionMapping\":{\"lZi1cjtvVB6\":null},\"namesMapping\":{\"lZi1cjtvVB6\":\"Number of new foci indentified\"}}"
      },
      {
        "id": "EHbjdbiKtd8",
        "name": "Number of malaria foci classified",
        "json": "{\"expression\":\"(((#{EHbjdbiKtd8})/(1))*1)\",\"expressionMapping\":{\"EHbjdbiKtd8\":null},\"namesMapping\":{\"EHbjdbiKtd8\":\"Number of malaria foci classified\"}}"
      },
      {
        "id": "IS9VxwhkJXR",
        "name": "proportion of foci with response within N4 days of diagnosis",
        "description": "Number of foci with response within (N4)*,(the number of days after confirmation of case, defined in the national guideline) divided by total number of foci detected as new (eligible for response) muliplied by 100. Note: Eligibility of foci for response depends on previous interventions, status of foci (active, non-active or cleare-up)",
        "json": "{\"expression\":\"(((#{jKGVvTehpps})/(#{lZi1cjtvVB6}))*100)\",\"expressionMapping\":{\"jKGVvTehpps\":null,\"lZi1cjtvVB6\":null},\"namesMapping\":{\"jKGVvTehpps\":\"Number of malaria foci with response within (N4)* timeframe of the guideline\",\"lZi1cjtvVB6\":\"Number of new foci indentified\"}}"
      },
      {
        "id": "lWrQhvx4YUA",
        "name": "Cases investigated",
        "description": "Number of positive cases detected through PCD and investigated by total number of cases detected through PCD",
        "json": "{\"expression\":\"(((((#{Ppc51eaCPHb})))/(((#{enVf9I39FRZ})) + ((#{vTRrNdOOT9g}))))*100)\",\"expressionMapping\":{\"Ppc51eaCPHb\":null,\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"Ppc51eaCPHb\":\"Number of Malaria cases investigated\",\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "fj29hAOSNDk",
        "name": "Annual blood examination rate",
        "description": "\"The number of people receiving a parasitological test for malaria per\nunit population per year \"",
        "json": "{\"expression\":\"(((((#{DPNsg3wjxGm})) + (( #{pmRn0GsUfr6}) ))/(1))*100)\",\"expressionMapping\":{\"DPNsg3wjxGm\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"}}"
      },
      {
        "id": "HfEGwjpq3Rq",
        "name": "Presumed cases",
        "description": "Case suspected of being malaria that is not confirmed by a diagnostic test.\nNote: The designation “presumed case” is reserved for uncommon\nsituations in which a diagnostic test cannot be performed in a timely\nmanner. ",
        "json": "{\"expression\":\"((((#{cE8SDxizo5s}) + (((#{DPNsg3wjxGm})) + ((#{pmRn0GsUfr6}))))/(1))*1)\",\"expressionMapping\":{\"cE8SDxizo5s\":null,\"DPNsg3wjxGm\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"cE8SDxizo5s\":\"Number of suspected malaria cases\",\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"}}"
      },
      {
        "id": "HMUc4RajgaC",
        "name": "Number of malaria cases classified as local",
        "json": "{\"expression\":\"(((#{HMUc4RajgaC})/(1))*1)\",\"expressionMapping\":{\"HMUc4RajgaC\":null},\"namesMapping\":{\"HMUc4RajgaC\":\"Number of malaria cases classified as local\"}}"
      },
      {
        "id": "kRasaq1REFp",
        "name": "Incidence",
        "json": "{\"expression\":\"(((#{kRasaq1REFp})/(1))*1)\",\"expressionMapping\":{\"kRasaq1REFp\":null},\"namesMapping\":{\"kRasaq1REFp\":\"Incidence\"}}"
      },
      {
        "id": "UHoPVgnALcd",
        "name": "Non-malaria outpatient cases",
        "description": "All outpatient cases except malaria (all-cause outpatient cases minus malaria cases)",
        "json": "{\"expression\":\"((((#{VL73cqNHxBJ}) -(#{kRasaq1REFp}))/(1))*1)\",\"expressionMapping\":{\"VL73cqNHxBJ\":null,\"kRasaq1REFp\":null},\"namesMapping\":{\"VL73cqNHxBJ\":\"Number of all-cause outpatient cases\",\"kRasaq1REFp\":\"Incidence\"}}"
      },
      {
        "id": "GxlrIgMyEf4",
        "name": "Number of malaria deaths",
        "json": "{\"expression\":\"(((#{GxlrIgMyEf4})/(1))*1)\",\"expressionMapping\":{\"GxlrIgMyEf4\":null},\"namesMapping\":{\"GxlrIgMyEf4\":\"Number of malaria deaths\"}}"
      },
      {
        "id": "af7VIQU9Gsb",
        "name": "Non-malaria inpatient deaths",
        "description": "All deaths except malaria (all-cause deaths minus malaria deaths)",
        "json": "{\"expression\":\"((((#{SXGjaEobp6V}) - (#{GxlrIgMyEf4}))/(1))*1)\",\"expressionMapping\":{\"SXGjaEobp6V\":null,\"GxlrIgMyEf4\":null},\"namesMapping\":{\"SXGjaEobp6V\":\"Number of all-cause death\",\"GxlrIgMyEf4\":\"Number of malaria deaths\"}}"
      },
      {
        "id": "q5EPiDt5Xzt",
        "name": "Malaria inpatient reporting completeness (%)",
        "description": "Percentage of reporting completeness for malaria inpatients ",
        "json": "{\"expression\":\"((((#{v0WZQQ6gKAX}))/(#{IVf0LfRTMw7}))*100)\",\"expressionMapping\":{\"v0WZQQ6gKAX\":null,\"IVf0LfRTMw7\":null},\"namesMapping\":{\"v0WZQQ6gKAX\":\"Number of inpatient malaria cases\",\"IVf0LfRTMw7\":\"Number of health facilities expected to report\"}}"
      },
      {
        "id": "YS1Rf9k88HX",
        "name": "Malaria deaths reporting completeness (%)",
        "description": "Number of malaria deaths reported by health facilities (public, private and NGO) divided by total number of health facilities expected to report ",
        "json": "{\"expression\":\"((((#{GxlrIgMyEf4}))/(#{IVf0LfRTMw7}))*100)\",\"expressionMapping\":{\"GxlrIgMyEf4\":null,\"IVf0LfRTMw7\":null},\"namesMapping\":{\"GxlrIgMyEf4\":\"Number of malaria deaths\",\"IVf0LfRTMw7\":\"Number of health facilities expected to report\"}}"
      },
      {
        "id": "AvQDluaf46N",
        "name": "Total malaria cases (confirmed+presumed)",
        "description": "Total number of cases reported as malaria (confirmed with either microscopy or RDT, and presumed clinically as malaria in absence of diagnosis)",
        "json": "{\"expression\":\"(#{enVf9I39FRZ} + #{vTRrNdOOT9g})\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\"}}"
      },
      {
        "id": "RqGYc77Xhek",
        "name": "% of suspected cases tested",
        "description": "Number of suspected cases tested with either microscopy or RDT divided by total number of suspected cases multiplied by 100 ",
        "json": "{\"expression\":\"((((#{cE8SDxizo5s}))/(((#{DPNsg3wjxGm}))  + ((#{pmRn0GsUfr6}))))*100)\",\"expressionMapping\":{\"cE8SDxizo5s\":null,\"DPNsg3wjxGm\":null,\"pmRn0GsUfr6\":null},\"namesMapping\":{\"cE8SDxizo5s\":\"Number of suspected malaria cases\",\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\"}}"
      },
      {
        "id": "HxTrnX154BH",
        "name": "No. of LLIN distributed ",
        "json": "{\"expression\":\"(((#{HxTrnX154BH})/(1))*1)\",\"expressionMapping\":{\"HxTrnX154BH\":null},\"namesMapping\":{\"HxTrnX154BH\":\"No. of LLIN distributed \"}}"
      },
      {
        "id": "UH47dKFqTRK",
        "name": "Number of long lasting insecticide treated nets distributed",
        "json": "{\"expression\":\"(((#{UH47dKFqTRK})/(1))*1)\",\"expressionMapping\":{\"UH47dKFqTRK\":null},\"namesMapping\":{\"UH47dKFqTRK\":\"Number of long lasting insecticide treated nets distributed\"}}"
      },
      {
        "id": "NywGy6uMS5r",
        "name": "Number of people protected by IRS",
        "json": "{\"expression\":\"(((#{NywGy6uMS5r})/(1))*1)\",\"expressionMapping\":{\"NywGy6uMS5r\":null},\"namesMapping\":{\"NywGy6uMS5r\":\"Number of people protected by IRS\"}}"
      },
      {
        "id": "UyuDDeXuIbr",
        "name": "% of population protected by IRS",
        "description": "Number of people in the targeted risk group protected by IRS in the past 12 months divided by number of people in risk group mutiplied by 100",
        "json": "{\"expression\":\"((((#{AFoWbafBOac}))/((#{cOVhTyW8zN6})))*100)\",\"expressionMapping\":{\"AFoWbafBOac\":null,\"cOVhTyW8zN6\":null},\"namesMapping\":{\"AFoWbafBOac\":\"Number of hummocks distributed\",\"cOVhTyW8zN6\":\"Population at risk\"}}"
      },
      {
        "id": "SEi6VEB5DO0",
        "name": "Annual parasite incidence (API)",
        "json": "{\"expression\":\"(((((#{enVf9I39FRZ} + #{vTRrNdOOT9g}) + (#{cE8SDxizo5s} - (#{DPNsg3wjxGm} + #{pmRn0GsUfr6})) * (100 * (#{enVf9I39FRZ} / #{DPNsg3wjxGm})) ) * 1000)/(#{cOVhTyW8zN6} * #{lz1FE0wvo1m}))*1)\",\"expressionMapping\":{\"enVf9I39FRZ\":null,\"vTRrNdOOT9g\":null,\"cE8SDxizo5s\":null,\"DPNsg3wjxGm\":null,\"pmRn0GsUfr6\":null,\"cOVhTyW8zN6\":null,\"lz1FE0wvo1m\":null},\"namesMapping\":{\"enVf9I39FRZ\":\"Number of malaria cases positive with microscopy \",\"vTRrNdOOT9g\":\"Number of malaria cases positive with RDT\",\"cE8SDxizo5s\":\"Number of suspected malaria cases\",\"DPNsg3wjxGm\":\"Number of malaria cases tested with microscopy \",\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\",\"cOVhTyW8zN6\":\"Population at risk\",\"lz1FE0wvo1m\":\"Number of active foci \"}}"
      },
      {
        "id": "PAbp5CFUJEP",
        "name": "Domestic Funding",
        "json": "{\"expression\":\"(((#{PAbp5CFUJEP})/(1))*1)\",\"expressionMapping\":{\"PAbp5CFUJEP\":null},\"namesMapping\":{\"PAbp5CFUJEP\":\"Domestic Funding\"}}"
      },
      {
        "id": "bMshElFlkIT",
        "name": "External Funding",
        "json": "{\"expression\":\"(((#{bMshElFlkIT})/(1))*1)\",\"expressionMapping\":{\"bMshElFlkIT\":null},\"namesMapping\":{\"bMshElFlkIT\":\"External Funding\"}}"
      },
      {
        "id": "LB63qxQWAot",
        "name": "Funding gap",
        "json": "{\"expression\":\"(((#{LB63qxQWAot})/(1))*1)\",\"expressionMapping\":{\"LB63qxQWAot\":null},\"namesMapping\":{\"LB63qxQWAot\":\"Funding gap\"}}"
      },
      {
        "id": "l7gcisIvTBN",
        "name": "Number of ACTs courses received",
        "json": "{\"expression\":\"(((#{l7gcisIvTBN})/(1))*1)\",\"expressionMapping\":{\"l7gcisIvTBN\":null},\"namesMapping\":{\"l7gcisIvTBN\":\"Number of ACTs courses received\"}}"
      },
      {
        "id": "M91K9z70dl4",
        "name": "Number of P. falciparum cases treated with ACT only",
        "json": "{\"expression\":\"(((#{M91K9z70dl4})/(1))*1)\",\"expressionMapping\":{\"M91K9z70dl4\":null},\"namesMapping\":{\"M91K9z70dl4\":\"Number of P. falciparum cases treated with ACT only\"}}"
      },
      {
        "id": "OMYp5Suv6P2",
        "name": "RDT/ACT Ratio",
        "description": "Number of RDTs distributed divided by number ACTs distributed",
        "json": "{\"expression\":\"(((((#{pmRn0GsUfr6})))/((#{l7gcisIvTBN})))*100)\",\"expressionMapping\":{\"pmRn0GsUfr6\":null,\"l7gcisIvTBN\":null},\"namesMapping\":{\"pmRn0GsUfr6\":\"Number of malaria cases tested with RDT\",\"l7gcisIvTBN\":\"Number of ACTs courses received\"}}"
      },
      {
        "id": "OcBiqoUWLYy",
        "name": "% of population potenially covered with LLINs",
        "description": "Number of LLIINs distributed in past 3 years* 1.8 divided by population at risk of malaria multiplied by 100",
        "json": "{\"expression\":\"((((#{UH47dKFqTRK} )* 1.8)/((#{cOVhTyW8zN6})))*100)\",\"expressionMapping\":{\"UH47dKFqTRK\":null,\"cOVhTyW8zN6\":null},\"namesMapping\":{\"UH47dKFqTRK\":\"Number of long lasting insecticide treated nets distributed\",\"cOVhTyW8zN6\":\"Population at risk\"}}"
      },
      {
        "id": "cOVhTyW8zN6",
        "name": "Population at risk",
        "json": "{\"expression\":\"(((#{cOVhTyW8zN6})/(1))*1)\",\"expressionMapping\":{\"cOVhTyW8zN6\":null},\"namesMapping\":{\"cOVhTyW8zN6\":\"Population at risk\"}}"
      },
      {
        "id": "X0luAFiy268",
        "name": "Number of malaria confirmed cases (Mic+RDT)",
        "json": "{\"expression\":\"(((#{X0luAFiy268})/(1))*1)\",\"expressionMapping\":{\"X0luAFiy268\":null},\"namesMapping\":{\"X0luAFiy268\":\"Number of malaria confirmed cases (Mic+RDT)\"}}"
      },
      {
        "id": "Jlp3WR8fVnO",
        "name": "Relapsing/recrudesance cases",
        "json": "{\"expression\":\"((((#{QFz6w4llj0h}) + (#{TMaDgAn60aR}))/(1))*1)\",\"expressionMapping\":{\"QFz6w4llj0h\":null,\"TMaDgAn60aR\":null},\"namesMapping\":{\"QFz6w4llj0h\":\"Number of malaria cases classified as relapsing\",\"TMaDgAn60aR\":\"Number of malaria cases classified as recrudescent\"}}"
      },
      {
        "id": "HiH7BmkVTyK",
        "name": "Number of P. Falciparum cases",
        "json": "{\"expression\":\"((((#{IIU1O0Z4l49}) + (#{TNTW2ruEVEu}) + (#{IUrl6HtHVQI})  + (#{llpG8qA0SvG}))/(1))*1)\",\"expressionMapping\":{\"IIU1O0Z4l49\":null,\"TNTW2ruEVEu\":null,\"IUrl6HtHVQI\":null,\"llpG8qA0SvG\":null},\"namesMapping\":{\"IIU1O0Z4l49\":\"Number of plasmodium falciparum (Mic+RDT)\",\"TNTW2ruEVEu\":\"Number of mixed malaria species  (Mic+RDT)\",\"IUrl6HtHVQI\":\"Number of plasmodium falciparum (RDT) \",\"llpG8qA0SvG\":\"Number of mixed/Other malaria species (RDT)\"}}"
      },
      {
        "id": "tGfdJPAcElX",
        "name": "Number of P. vivax cases",
        "json": "{\"expression\":\"((((#{yHS1RqIFeD7}) + (#{yVGY0DGVPor}))/(1))*1)\",\"expressionMapping\":{\"yHS1RqIFeD7\":null,\"yVGY0DGVPor\":null},\"namesMapping\":{\"yHS1RqIFeD7\":\"Number of plasmodium vivax (microscopy) \",\"yVGY0DGVPor\":\"Number of plasmodium vivax (RDT) \"}}"
      }
    ],
    "name": "who malaria",
    "description": "Function for control who's indicator calculations",
    "id": "whoMalariafn",
    "created": "2018-08-20T08:04:06.102Z",
    "lastUpdated": "2018-08-28T15:37:07.772Z",
    "externalAccess": false,
    "userGroupAccesses": [],
    "attributeValues": [],
    "translations": [],
    "userAccesses": [],
    "publicAccess": "rw------",
    "user": {
      "id": ""
    },
    "href": "https://test.hisptz.org/dhis?api/dataStore/functions/whoMalariafn",
    "displayName": "who malaria",
    "selected": true,
    "active": true
  }
}
